package com.ketheroth.vanillaextension.init;

import com.ketheroth.vanillaextension.VanillaExtension;
import com.ketheroth.vanillaextension.fences.*;
import net.minecraft.util.valueproviders.UniformInt;
import net.minecraft.world.entity.EntityType;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.*;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.material.MaterialColor;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus;
import net.minecraftforge.fmllegacy.RegistryObject;

import static com.ketheroth.vanillaextension.VanillaExtension.BLOCKS;
import static com.ketheroth.vanillaextension.VanillaExtension.ITEMS;

@SuppressWarnings("unused")
@Mod.EventBusSubscriber(modid = VanillaExtension.MODID, bus = Bus.MOD)
public class FenceInit {

	public static final RegistryObject<Block> stone_fence = register("stone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.STONE)));
	public static final RegistryObject<Block> granite_fence = register("granite_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GRANITE)));
	public static final RegistryObject<Block> polished_granite_fence = register("polished_granite_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.POLISHED_GRANITE)));
	public static final RegistryObject<Block> diorite_fence = register("diorite_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DIORITE)));
	public static final RegistryObject<Block> polished_diorite_fence = register("polished_diorite_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.POLISHED_DIORITE)));
	public static final RegistryObject<Block> andesite_fence = register("andesite_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ANDESITE)));
	public static final RegistryObject<Block> polished_andesite_fence = register("polished_andesite_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.POLISHED_ANDESITE)));
	public static final RegistryObject<Block> grass_block_fence = register("grass_block_fence", new GrassBlockFence(BlockBehaviour.Properties.copy(Blocks.GRASS_BLOCK)));
	public static final RegistryObject<Block> dirt_fence = register("dirt_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DIRT)));
	public static final RegistryObject<Block> coarse_dirt_fence = register("coarse_dirt_fence", new CoarseDirtFence(BlockBehaviour.Properties.copy(Blocks.COARSE_DIRT)));
	public static final RegistryObject<Block> podzol_fence = register("podzol_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PODZOL)));
	public static final RegistryObject<Block> cobblestone_fence = register("cobblestone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.COBBLESTONE)));
	public static final RegistryObject<Block> bedrock_fence = register("bedrock_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BEDROCK)));
	public static final RegistryObject<Block> sand_fence = register("sand_fence", new FallingFence(BlockBehaviour.Properties.copy(Blocks.SAND)));
	public static final RegistryObject<Block> red_sand_fence = register("red_sand_fence", new FallingFence(BlockBehaviour.Properties.copy(Blocks.RED_SAND)));
	public static final RegistryObject<Block> gravel_fence = register("gravel_fence", new FallingFence(BlockBehaviour.Properties.copy(Blocks.GRAVEL)));
	public static final RegistryObject<Block> gold_ore_fence = register("gold_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.GOLD_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_GOLD_ORE_FENCE = register("deepslate_gold_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_GOLD_ORE)));
	public static final RegistryObject<Block> iron_ore_fence = register("iron_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.IRON_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_IRON_ORE_FENCE = register("deepslate_iron_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_IRON_ORE)));
	public static final RegistryObject<Block> coal_ore_fence = register("coal_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.COAL_ORE), UniformInt.of(0, 2)));
	public static final RegistryObject<Block> DEEPSLATE_COAL_ORE_FENCE = register("deepslate_coal_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_COAL_ORE), UniformInt.of(0, 2)));
	public static final RegistryObject<Block> nether_gold_ore_fence = register("nether_gold_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.NETHER_GOLD_ORE), UniformInt.of(0, 1)));
	public static final RegistryObject<Block> oak_log_fence = register("oak_log_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> spruce_log_fence = register("spruce_log_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> birch_log_fence = register("birch_log_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> jungle_log_fence = register("jungle_log_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> acacia_log_fence = register("acacia_log_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> dark_oak_log_fence = register("dark_oak_log_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_oak_log_fence = register("stripped_oak_log_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_spruce_log_fence = register("stripped_spruce_log_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_birch_log_fence = register("stripped_birch_log_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_jungle_log_fence = register("stripped_jungle_log_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_acacia_log_fence = register("stripped_acacia_log_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_dark_oak_log_fence = register("stripped_dark_oak_log_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> oak_wood_fence = register("oak_wood_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> spruce_wood_fence = register("spruce_wood_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> birch_wood_fence = register("birch_wood_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> jungle_wood_fence = register("jungle_wood_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> acacia_wood_fence = register("acacia_wood_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> dark_oak_wood_fence = register("dark_oak_wood_fence", new LogFence(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_oak_wood_fence = register("stripped_oak_wood_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_spruce_wood_fence = register("stripped_spruce_wood_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_birch_wood_fence = register("stripped_birch_wood_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_jungle_wood_fence = register("stripped_jungle_wood_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_acacia_wood_fence = register("stripped_acacia_wood_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_dark_oak_wood_fence = register("stripped_dark_oak_wood_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> oak_leaves_fence = register("oak_leaves_fence", leaves(SoundType.GRASS));
	public static final RegistryObject<Block> spruce_leaves_fence = register("spruce_leaves_fence", leaves(SoundType.GRASS));
	public static final RegistryObject<Block> birch_leaves_fence = register("birch_leaves_fence", leaves(SoundType.GRASS));
	public static final RegistryObject<Block> jungle_leaves_fence = register("jungle_leaves_fence", leaves(SoundType.GRASS));
	public static final RegistryObject<Block> acacia_leaves_fence = register("acacia_leaves_fence", leaves(SoundType.GRASS));
	public static final RegistryObject<Block> dark_oak_leaves_fence = register("dark_oak_leaves_fence", leaves(SoundType.GRASS));
	public static final RegistryObject<Block> AZALEA_LEAVES_FENCE = register("azalea_leaves_fence", leaves(SoundType.AZALEA_LEAVES));
	public static final RegistryObject<Block> FLOWERING_AZALEA_LEAVES_FENCE = register("flowering_azalea_leaves_fence", leaves(SoundType.AZALEA_LEAVES));
	public static final RegistryObject<Block> sponge_fence = register("sponge_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SPONGE)));
	public static final RegistryObject<Block> wet_sponge_fence = register("wet_sponge_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WET_SPONGE)));
	public static final RegistryObject<Block> glass_fence = register("glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GLASS)));
	public static final RegistryObject<Block> lapis_ore_fence = register("lapis_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.LAPIS_ORE), UniformInt.of(2, 5)));
	public static final RegistryObject<Block> DEEPSLATE_LAPIS_ORE_FENCE = register("deepslate_lapis_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_LAPIS_ORE), UniformInt.of(2, 5)));
	public static final RegistryObject<Block> lapis_block_fence = register("lapis_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LAPIS_BLOCK)));
	public static final RegistryObject<Block> sandstone_fence = register("sandstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SANDSTONE)));
	public static final RegistryObject<Block> chiseled_sandstone_fence = register("chiseled_sandstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CHISELED_SANDSTONE)));
	public static final RegistryObject<Block> cut_sandstone_fence = register("cut_sandstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CUT_SANDSTONE)));
	public static final RegistryObject<Block> white_wool_fence = register("white_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WHITE_WOOL)));
	public static final RegistryObject<Block> orange_wool_fence = register("orange_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ORANGE_WOOL)));
	public static final RegistryObject<Block> magenta_wool_fence = register("magenta_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MAGENTA_WOOL)));
	public static final RegistryObject<Block> light_blue_wool_fence = register("light_blue_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_WOOL)));
	public static final RegistryObject<Block> yellow_wool_fence = register("yellow_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.YELLOW_WOOL)));
	public static final RegistryObject<Block> lime_wool_fence = register("lime_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIME_WOOL)));
	public static final RegistryObject<Block> pink_wool_fence = register("pink_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PINK_WOOL)));
	public static final RegistryObject<Block> gray_wool_fence = register("gray_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GRAY_WOOL)));
	public static final RegistryObject<Block> light_gray_wool_fence = register("light_gray_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_WOOL)));
	public static final RegistryObject<Block> cyan_wool_fence = register("cyan_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CYAN_WOOL)));
	public static final RegistryObject<Block> purple_wool_fence = register("purple_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PURPLE_WOOL)));
	public static final RegistryObject<Block> blue_wool_fence = register("blue_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLUE_WOOL)));
	public static final RegistryObject<Block> brown_wool_fence = register("brown_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BROWN_WOOL)));
	public static final RegistryObject<Block> green_wool_fence = register("green_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GREEN_WOOL)));
	public static final RegistryObject<Block> red_wool_fence = register("red_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RED_WOOL)));
	public static final RegistryObject<Block> black_wool_fence = register("black_wool_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLACK_WOOL)));
	public static final RegistryObject<Block> gold_block_fence = register("gold_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GOLD_BLOCK)));
	public static final RegistryObject<Block> iron_block_fence = register("iron_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.IRON_BLOCK)));
	public static final RegistryObject<Block> brick_fence = register("brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BRICKS)));
	public static final RegistryObject<Block> tnt_fence = register("tnt_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.TNT)));
	public static final RegistryObject<Block> bookshelf_fence = register("bookshelf_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BOOKSHELF)));
	public static final RegistryObject<Block> mossy_cobblestone_fence = register("mossy_cobblestone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MOSSY_COBBLESTONE)));
	public static final RegistryObject<Block> obsidian_fence = register("obsidian_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.OBSIDIAN)));
	public static final RegistryObject<Block> spawner_fence = register("spawner_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SPAWNER)));
	public static final RegistryObject<Block> diamond_ore_fence = register("diamond_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.DIAMOND_ORE), UniformInt.of(3, 7)));
	public static final RegistryObject<Block> DEEPSLATE_DIAMOND_ORE_FENCE = register("deepslate_diamond_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_DIAMOND_ORE), UniformInt.of(3, 7)));
	public static final RegistryObject<Block> diamond_block_fence = register("diamond_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DIAMOND_BLOCK)));
	public static final RegistryObject<Block> redstone_ore_fence = register("redstone_ore_fence", new RedstoneOreFence(BlockBehaviour.Properties.copy(Blocks.REDSTONE_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_REDSTONE_ORE_FENCE = register("deepslate_redstone_ore_fence", new RedstoneOreFence(BlockBehaviour.Properties.of(Material.STONE).requiresCorrectToolForDrops().lightLevel(/*litBlockEmission(9)*/ state -> 9).color(MaterialColor.DEEPSLATE).strength(4.5F, 3.0F).sound(SoundType.DEEPSLATE)));
	public static final RegistryObject<Block> ice_fence = register("ice_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.ICE).friction(0.98F).strength(0.5F).sound(SoundType.GLASS).noOcclusion()));
	public static final RegistryObject<Block> snow_block_fence = register("snow_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SNOW_BLOCK)));
	public static final RegistryObject<Block> clay_fence = register("clay_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CLAY)));
	public static final RegistryObject<Block> pumpkin_fence = register("pumpkin_fence", new PumpkinFence(BlockBehaviour.Properties.copy(Blocks.PUMPKIN)));
	public static final RegistryObject<Block> netherrack_fence = register("netherrack_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.NETHERRACK)));
	public static final RegistryObject<Block> soul_sand_fence = register("soul_sand_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(0.5F).speedFactor(0.4F).sound(SoundType.SAND)));
	public static final RegistryObject<Block> soul_soil_fence = register("soul_soil_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SOUL_SOIL)));
	public static final RegistryObject<Block> glowstone_fence = register("glowstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GLOWSTONE)));
	public static final RegistryObject<Block> carved_pumpkin_fence = register("carved_pumpkin_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CARVED_PUMPKIN)));
	public static final RegistryObject<Block> jack_o_lantern_fence = register("jack_o_lantern_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.JACK_O_LANTERN)));
	public static final RegistryObject<Block> white_stained_glass_fence = register("white_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WHITE_STAINED_GLASS)));
	public static final RegistryObject<Block> orange_stained_glass_fence = register("orange_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ORANGE_STAINED_GLASS)));
	public static final RegistryObject<Block> magenta_stained_glass_fence = register("magenta_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MAGENTA_STAINED_GLASS)));
	public static final RegistryObject<Block> light_blue_stained_glass_fence = register("light_blue_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_STAINED_GLASS)));
	public static final RegistryObject<Block> yellow_stained_glass_fence = register("yellow_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.YELLOW_STAINED_GLASS)));
	public static final RegistryObject<Block> lime_stained_glass_fence = register("lime_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIME_STAINED_GLASS)));
	public static final RegistryObject<Block> pink_stained_glass_fence = register("pink_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PINK_STAINED_GLASS)));
	public static final RegistryObject<Block> gray_stained_glass_fence = register("gray_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GRAY_STAINED_GLASS)));
	public static final RegistryObject<Block> light_gray_stained_glass_fence = register("light_gray_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_STAINED_GLASS)));
	public static final RegistryObject<Block> cyan_stained_glass_fence = register("cyan_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CYAN_STAINED_GLASS)));
	public static final RegistryObject<Block> purple_stained_glass_fence = register("purple_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PURPLE_STAINED_GLASS)));
	public static final RegistryObject<Block> blue_stained_glass_fence = register("blue_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLUE_STAINED_GLASS)));
	public static final RegistryObject<Block> brown_stained_glass_fence = register("brown_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BROWN_STAINED_GLASS)));
	public static final RegistryObject<Block> green_stained_glass_fence = register("green_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GREEN_STAINED_GLASS)));
	public static final RegistryObject<Block> red_stained_glass_fence = register("red_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RED_STAINED_GLASS)));
	public static final RegistryObject<Block> black_stained_glass_fence = register("black_stained_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLACK_STAINED_GLASS)));
	public static final RegistryObject<Block> oak_trapdoor_fence = register("oak_trapdoor_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.OAK_TRAPDOOR)));
	public static final RegistryObject<Block> spruce_trapdoor_fence = register("spruce_trapdoor_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SPRUCE_TRAPDOOR)));
	public static final RegistryObject<Block> birch_trapdoor_fence = register("birch_trapdoor_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BIRCH_TRAPDOOR)));
	public static final RegistryObject<Block> jungle_trapdoor_fence = register("jungle_trapdoor_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.JUNGLE_TRAPDOOR)));
	public static final RegistryObject<Block> acacia_trapdoor_fence = register("acacia_trapdoor_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ACACIA_TRAPDOOR)));
	public static final RegistryObject<Block> dark_oak_trapdoor_fence = register("dark_oak_trapdoor_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DARK_OAK_TRAPDOOR)));
	public static final RegistryObject<Block> stone_brick_fence = register("stone_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.STONE_BRICKS)));
	public static final RegistryObject<Block> mossy_stone_brick_fence = register("mossy_stone_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MOSSY_STONE_BRICKS)));
	public static final RegistryObject<Block> cracked_stone_brick_fence = register("cracked_stone_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CRACKED_STONE_BRICKS)));
	public static final RegistryObject<Block> chiseled_stone_brick_fence = register("chiseled_stone_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CHISELED_STONE_BRICKS)));
	public static final RegistryObject<Block> brown_mushroom_block_fence = register("brown_mushroom_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BROWN_MUSHROOM_BLOCK)));
	public static final RegistryObject<Block> red_mushroom_block_fence = register("red_mushroom_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RED_MUSHROOM_BLOCK)));
	public static final RegistryObject<Block> mushroom_stem_fence = register("mushroom_stem_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MUSHROOM_STEM)));
	public static final RegistryObject<Block> iron_bars_fence = register("iron_bars_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.IRON_BARS)));
	public static final RegistryObject<Block> melon_fence = register("melon_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MELON)));
	public static final RegistryObject<Block> vine_fence = register("vine_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.REPLACEABLE_PLANT).noCollission().strength(0.2F).sound(SoundType.GRASS)));
	public static final RegistryObject<Block> GLOW_LICHEN_FENCE = register("glow_lichen_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.REPLACEABLE_PLANT, MaterialColor.GLOW_LICHEN).noCollission().strength(0.2F).sound(SoundType.GLOW_LICHEN).lightLevel(GlowLichenBlock.emission(7))));
	public static final RegistryObject<Block> mycelium_fence = register("mycelium_fence", new MyceliumFence(BlockBehaviour.Properties.copy(Blocks.MYCELIUM)));
	public static final RegistryObject<Block> end_stone_fence = register("end_stone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.END_STONE)));
	public static final RegistryObject<Block> dragon_egg_fence = register("dragon_egg_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DRAGON_EGG)));
	public static final RegistryObject<Block> redstone_lamp_fence = register("redstone_lamp_fence", new RedstoneLampFence(BlockBehaviour.Properties.copy(Blocks.REDSTONE_LAMP)));
	public static final RegistryObject<Block> emerald_ore_fence = register("emerald_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.EMERALD_ORE), UniformInt.of(3, 7)));
	public static final RegistryObject<Block> DEEPSLATE_EMERALD_ORE_FENCE = register("deepslate_emerald_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_EMERALD_ORE), UniformInt.of(3, 7)));
	public static final RegistryObject<Block> emerald_block_fence = register("emerald_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.EMERALD_BLOCK)));
	public static final RegistryObject<Block> redstone_block_fence = register("redstone_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.REDSTONE_BLOCK)));
	public static final RegistryObject<Block> nether_quartz_ore_fence = register("nether_quartz_ore_fence", new OreFence(BlockBehaviour.Properties.copy(Blocks.NETHER_QUARTZ_ORE), UniformInt.of(2, 5)));
	public static final RegistryObject<Block> hopper_fence = register("hopper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.HOPPER)));
	public static final RegistryObject<Block> quartz_block_fence = register("quartz_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.QUARTZ_BLOCK)));
	public static final RegistryObject<Block> chiseled_quartz_block_fence = register("chiseled_quartz_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CHISELED_QUARTZ_BLOCK)));
	public static final RegistryObject<Block> quartz_pillar_fence = register("quartz_pillar_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.QUARTZ_PILLAR)));
	public static final RegistryObject<Block> white_terracotta_fence = register("white_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WHITE_TERRACOTTA)));
	public static final RegistryObject<Block> orange_terracotta_fence = register("orange_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ORANGE_TERRACOTTA)));
	public static final RegistryObject<Block> magenta_terracotta_fence = register("magenta_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MAGENTA_TERRACOTTA)));
	public static final RegistryObject<Block> light_blue_terracotta_fence = register("light_blue_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_TERRACOTTA)));
	public static final RegistryObject<Block> yellow_terracotta_fence = register("yellow_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.YELLOW_TERRACOTTA)));
	public static final RegistryObject<Block> lime_terracotta_fence = register("lime_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIME_TERRACOTTA)));
	public static final RegistryObject<Block> pink_terracotta_fence = register("pink_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PINK_TERRACOTTA)));
	public static final RegistryObject<Block> gray_terracotta_fence = register("gray_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GRAY_TERRACOTTA)));
	public static final RegistryObject<Block> light_gray_terracotta_fence = register("light_gray_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_TERRACOTTA)));
	public static final RegistryObject<Block> cyan_terracotta_fence = register("cyan_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CYAN_TERRACOTTA)));
	public static final RegistryObject<Block> purple_terracotta_fence = register("purple_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PURPLE_TERRACOTTA)));
	public static final RegistryObject<Block> blue_terracotta_fence = register("blue_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLUE_TERRACOTTA)));
	public static final RegistryObject<Block> brown_terracotta_fence = register("brown_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BROWN_TERRACOTTA)));
	public static final RegistryObject<Block> green_terracotta_fence = register("green_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GREEN_TERRACOTTA)));
	public static final RegistryObject<Block> red_terracotta_fence = register("red_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RED_TERRACOTTA)));
	public static final RegistryObject<Block> black_terracotta_fence = register("black_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLACK_TERRACOTTA)));
	public static final RegistryObject<Block> slime_block_fence = register("slime_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SLIME_BLOCK)));
	public static final RegistryObject<Block> iron_trapdoor_fence = register("iron_trapdoor_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.IRON_TRAPDOOR)));
	public static final RegistryObject<Block> prismarine_fence = register("prismarine_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PRISMARINE)));
	public static final RegistryObject<Block> prismarine_brick_fence = register("prismarine_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PRISMARINE_BRICKS)));
	public static final RegistryObject<Block> dark_prismarine_fence = register("dark_prismarine_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DARK_PRISMARINE)));
	public static final RegistryObject<Block> sea_lantern_fence = register("sea_lantern_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SEA_LANTERN)));
	public static final RegistryObject<Block> hay_block_fence = register("hay_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.HAY_BLOCK)));
	public static final RegistryObject<Block> terracotta_fence = register("terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.TERRACOTTA)));
	public static final RegistryObject<Block> coal_block_fence = register("coal_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.COAL_BLOCK)));
	public static final RegistryObject<Block> packed_ice_fence = register("packed_ice_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PACKED_ICE)));
	public static final RegistryObject<Block> red_sandstone_fence = register("red_sandstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RED_SANDSTONE)));
	public static final RegistryObject<Block> chiseled_red_sandstone_fence = register("chiseled_red_sandstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CHISELED_RED_SANDSTONE)));
	public static final RegistryObject<Block> cut_red_sandstone_fence = register("cut_red_sandstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CUT_RED_SANDSTONE)));
	public static final RegistryObject<Block> smooth_stone_fence = register("smooth_stone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SMOOTH_STONE)));
	public static final RegistryObject<Block> smooth_sandstone_fence = register("smooth_sandstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SMOOTH_SANDSTONE)));
	public static final RegistryObject<Block> smooth_quartz_fence = register("smooth_quartz_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SMOOTH_QUARTZ)));
	public static final RegistryObject<Block> smooth_red_sandstone_fence = register("smooth_red_sandstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SMOOTH_RED_SANDSTONE)));
	public static final RegistryObject<Block> purpur_block_fence = register("purpur_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PURPUR_BLOCK)));
	public static final RegistryObject<Block> purpur_pillar_fence = register("purpur_pillar_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PURPUR_PILLAR)));
	public static final RegistryObject<Block> end_stone_brick_fence = register("end_stone_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.END_STONE_BRICKS)));
	public static final RegistryObject<Block> dirt_path_fence = register("dirt_path_fence", new DirtPathFence(BlockBehaviour.Properties.copy(Blocks.DIRT_PATH)));
	public static final RegistryObject<Block> magma_block_fence = register("magma_block_fence", new FenceBlock(BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).lightLevel((state) -> 3).strength(0.5F)));
	public static final RegistryObject<Block> nether_wart_block_fence = register("nether_wart_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.NETHER_WART_BLOCK)));
	public static final RegistryObject<Block> red_nether_brick_fence = register("red_nether_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RED_NETHER_BRICKS)));
	public static final RegistryObject<Block> bone_block_fence = register("bone_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BONE_BLOCK)));
	public static final RegistryObject<Block> white_glazed_terracotta_fence = register("white_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WHITE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> orange_glazed_terracotta_fence = register("orange_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ORANGE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> magenta_glazed_terracotta_fence = register("magenta_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MAGENTA_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> light_blue_glazed_terracotta_fence = register("light_blue_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> yellow_glazed_terracotta_fence = register("yellow_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.YELLOW_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> lime_glazed_terracotta_fence = register("lime_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIME_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> pink_glazed_terracotta_fence = register("pink_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PINK_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> gray_glazed_terracotta_fence = register("gray_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GRAY_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> light_gray_glazed_terracotta_fence = register("light_gray_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> cyan_glazed_terracotta_fence = register("cyan_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CYAN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> purple_glazed_terracotta_fence = register("purple_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PURPLE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> blue_glazed_terracotta_fence = register("blue_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLUE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> brown_glazed_terracotta_fence = register("brown_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BROWN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> green_glazed_terracotta_fence = register("green_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GREEN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> red_glazed_terracotta_fence = register("red_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RED_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> black_glazed_terracotta_fence = register("black_glazed_terracotta_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLACK_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> white_concrete_fence = register("white_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WHITE_CONCRETE)));
	public static final RegistryObject<Block> orange_concrete_fence = register("orange_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ORANGE_CONCRETE)));
	public static final RegistryObject<Block> magenta_concrete_fence = register("magenta_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MAGENTA_CONCRETE)));
	public static final RegistryObject<Block> light_blue_concrete_fence = register("light_blue_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_CONCRETE)));
	public static final RegistryObject<Block> yellow_concrete_fence = register("yellow_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.YELLOW_CONCRETE)));
	public static final RegistryObject<Block> lime_concrete_fence = register("lime_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIME_CONCRETE)));
	public static final RegistryObject<Block> pink_concrete_fence = register("pink_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PINK_CONCRETE)));
	public static final RegistryObject<Block> gray_concrete_fence = register("gray_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GRAY_CONCRETE)));
	public static final RegistryObject<Block> light_gray_concrete_fence = register("light_gray_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_CONCRETE)));
	public static final RegistryObject<Block> cyan_concrete_fence = register("cyan_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CYAN_CONCRETE)));
	public static final RegistryObject<Block> purple_concrete_fence = register("purple_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.PURPLE_CONCRETE)));
	public static final RegistryObject<Block> blue_concrete_fence = register("blue_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLUE_CONCRETE)));
	public static final RegistryObject<Block> brown_concrete_fence = register("brown_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BROWN_CONCRETE)));
	public static final RegistryObject<Block> green_concrete_fence = register("green_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GREEN_CONCRETE)));
	public static final RegistryObject<Block> red_concrete_fence = register("red_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RED_CONCRETE)));
	public static final RegistryObject<Block> black_concrete_fence = register("black_concrete_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLACK_CONCRETE)));
	public static final RegistryObject<Block> white_concrete_powder_fence = register("white_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.WHITE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> orange_concrete_powder_fence = register("orange_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.ORANGE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> magenta_concrete_powder_fence = register("magenta_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.MAGENTA_CONCRETE_POWDER)));
	public static final RegistryObject<Block> light_blue_concrete_powder_fence = register("light_blue_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> yellow_concrete_powder_fence = register("yellow_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.YELLOW_CONCRETE_POWDER)));
	public static final RegistryObject<Block> lime_concrete_powder_fence = register("lime_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.LIME_CONCRETE_POWDER)));
	public static final RegistryObject<Block> pink_concrete_powder_fence = register("pink_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.PINK_CONCRETE_POWDER)));
	public static final RegistryObject<Block> gray_concrete_powder_fence = register("gray_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.GRAY_CONCRETE_POWDER)));
	public static final RegistryObject<Block> light_gray_concrete_powder_fence = register("light_gray_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_CONCRETE_POWDER)));
	public static final RegistryObject<Block> cyan_concrete_powder_fence = register("cyan_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.CYAN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> purple_concrete_powder_fence = register("purple_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.PURPLE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> blue_concrete_powder_fence = register("blue_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.BLUE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> brown_concrete_powder_fence = register("brown_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.BROWN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> green_concrete_powder_fence = register("green_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.GREEN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> red_concrete_powder_fence = register("red_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.RED_CONCRETE_POWDER)));
	public static final RegistryObject<Block> black_concrete_powder_fence = register("black_concrete_powder_fence", new ConcretePowderFence(BlockBehaviour.Properties.copy(Blocks.BLACK_CONCRETE_POWDER)));
	public static final RegistryObject<Block> dried_kelp_block_fence = register("dried_kelp_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DRIED_KELP_BLOCK)));
	public static final RegistryObject<Block> dead_tube_coral_block_fence = register("dead_tube_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEAD_TUBE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_brain_coral_block_fence = register("dead_brain_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEAD_BRAIN_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_bubble_coral_block_fence = register("dead_bubble_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEAD_BUBBLE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_fire_coral_block_fence = register("dead_fire_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEAD_FIRE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_horn_coral_block_fence = register("dead_horn_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEAD_HORN_CORAL_BLOCK)));
	public static final RegistryObject<Block> tube_coral_block_fence = register("tube_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.TUBE_CORAL_BLOCK)));
	public static final RegistryObject<Block> brain_coral_block_fence = register("brain_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BRAIN_CORAL_BLOCK)));
	public static final RegistryObject<Block> bubble_coral_block_fence = register("bubble_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BUBBLE_CORAL_BLOCK)));
	public static final RegistryObject<Block> fire_coral_block_fence = register("fire_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.FIRE_CORAL_BLOCK)));
	public static final RegistryObject<Block> horn_coral_block_fence = register("horn_coral_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.HORN_CORAL_BLOCK)));
	public static final RegistryObject<Block> blue_ice_fence = register("blue_ice_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLUE_ICE)));
	public static final RegistryObject<Block> honey_block_fence = register("honey_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.HONEY_BLOCK)));
	public static final RegistryObject<Block> honeycomb_block_fence = register("honeycomb_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.HONEYCOMB_BLOCK)));
	public static final RegistryObject<Block> warped_stem_fence = register("warped_stem_fence", new LogFence(BlockBehaviour.Properties.copy(Blocks.WARPED_STEM)));
	public static final RegistryObject<Block> stripped_warped_stem_fence = register("stripped_warped_stem_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.STRIPPED_WARPED_STEM)));
	public static final RegistryObject<Block> warped_hyphae_fence = register("warped_hyphae_fence", new LogFence(BlockBehaviour.Properties.copy(Blocks.WARPED_HYPHAE)));
	public static final RegistryObject<Block> stripped_warped_hyphae_fence = register("stripped_warped_hyphae_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.STRIPPED_WARPED_HYPHAE)));
	public static final RegistryObject<Block> warped_nylium_fence = register("warped_nylium_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WARPED_NYLIUM)));
	public static final RegistryObject<Block> warped_wart_block_fence = register("warped_wart_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WARPED_WART_BLOCK)));
	public static final RegistryObject<Block> crimson_stem_fence = register("crimson_stem_fence", new LogFence(BlockBehaviour.Properties.copy(Blocks.CRIMSON_STEM)));
	public static final RegistryObject<Block> stripped_crimson_stem_fence = register("stripped_crimson_stem_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.STRIPPED_CRIMSON_STEM)));
	public static final RegistryObject<Block> crimson_hyphae_fence = register("crimson_hyphae_fence", new LogFence(BlockBehaviour.Properties.copy(Blocks.CRIMSON_HYPHAE)));
	public static final RegistryObject<Block> stripped_crimson_hyphae_fence = register("stripped_crimson_hyphae_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.STRIPPED_CRIMSON_HYPHAE)));
	public static final RegistryObject<Block> crimson_nylium_fence = register("crimson_nylium_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CRIMSON_NYLIUM)));
	public static final RegistryObject<Block> shroomlight_fence = register("shroomlight_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SHROOMLIGHT)));
	public static final RegistryObject<Block> netherite_block_fence = register("netherite_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.NETHERITE_BLOCK)));
	public static final RegistryObject<Block> ancient_debris_fence = register("ancient_debris_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ANCIENT_DEBRIS)));
	public static final RegistryObject<Block> crying_obsidian_fence = register("crying_obsidian_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CRYING_OBSIDIAN)));
	public static final RegistryObject<Block> basalt_fence = register("basalt_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BASALT)));
	public static final RegistryObject<Block> polished_basalt_fence = register("polished_basalt_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.POLISHED_BASALT)));
	public static final RegistryObject<Block> blackstone_fence = register("blackstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BLACKSTONE)));
	public static final RegistryObject<Block> polished_blackstone_fence = register("polished_blackstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.POLISHED_BLACKSTONE)));
	public static final RegistryObject<Block> polished_blackstone_brick_fence = register("polished_blackstone_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.POLISHED_BLACKSTONE_BRICKS)));
	public static final RegistryObject<Block> cracked_polished_blackstone_brick_fence = register("cracked_polished_blackstone_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS)));
	public static final RegistryObject<Block> chiseled_polished_blackstone_fence = register("chiseled_polished_blackstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CHISELED_POLISHED_BLACKSTONE)));
	public static final RegistryObject<Block> gilded_blackstone_fence = register("gilded_blackstone_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.GILDED_BLACKSTONE)));
	public static final RegistryObject<Block> chiseled_nether_brick_fence = register("chiseled_nether_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CHISELED_NETHER_BRICKS)));
	public static final RegistryObject<Block> cracked_nether_brick_fence = register("cracked_nether_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CRACKED_NETHER_BRICKS)));
	public static final RegistryObject<Block> quartz_brick_fence = register("quartz_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.QUARTZ_BRICKS)));
	public static final RegistryObject<Block> AMETHYST_BLOCK_FENCE = register("amethyst_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.AMETHYST_BLOCK)));
	public static final RegistryObject<Block> BUDDING_AMETHYST_FENCE = register("budding_amethyst_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.BUDDING_AMETHYST)));
	public static final RegistryObject<Block> TUFF_FENCE = register("tuff_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.TUFF)));
	public static final RegistryObject<Block> CALCITE_FENCE = register("calcite_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CALCITE)));
	public static final RegistryObject<Block> TINTED_GLASS_FENCE = register("tinted_glass_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.TINTED_GLASS)));
	public static final RegistryObject<Block> COPPER_ORE_FENCE = register("copper_ore_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.COPPER_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_COPPER_ORE_FENCE = register("deepslate_copper_ore_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_COPPER_ORE)));
	public static final RegistryObject<Block> COPPER_BLOCK_FENCE = register("copper_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.COPPER_BLOCK)));
	public static final RegistryObject<Block> EXPOSED_COPPER_FENCE = register("exposed_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.EXPOSED_COPPER)));
	public static final RegistryObject<Block> WEATHERED_COPPER_FENCE = register("weathered_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WEATHERED_COPPER)));
	public static final RegistryObject<Block> OXIDIZED_COPPER_FENCE = register("oxidized_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.OXIDIZED_COPPER)));
	public static final RegistryObject<Block> CUT_COPPER_FENCE = register("cut_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CUT_COPPER)));
	public static final RegistryObject<Block> EXPOSED_CUT_COPPER_FENCE = register("exposed_cut_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.EXPOSED_CUT_COPPER)));
	public static final RegistryObject<Block> WEATHERED_CUT_COPPER_FENCE = register("weathered_cut_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WEATHERED_CUT_COPPER)));
	public static final RegistryObject<Block> OXIDIZED_CUT_COPPER_FENCE = register("oxidized_cut_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.OXIDIZED_CUT_COPPER)));
	public static final RegistryObject<Block> WAXED_COPPER_BLOCK_FENCE = register("waxed_copper_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WAXED_COPPER_BLOCK)));
	public static final RegistryObject<Block> WAXED_EXPOSED_COPPER_FENCE = register("waxed_exposed_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WAXED_EXPOSED_COPPER)));
	public static final RegistryObject<Block> WAXED_WEATHERED_COPPER_FENCE = register("waxed_weathered_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WAXED_WEATHERED_COPPER)));
	public static final RegistryObject<Block> WAXED_OXIDIZED_COPPER_FENCE = register("waxed_oxidized_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WAXED_OXIDIZED_COPPER)));
	public static final RegistryObject<Block> WAXED_CUT_COPPER_FENCE = register("waxed_cut_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WAXED_CUT_COPPER)));
	public static final RegistryObject<Block> WAXED_EXPOSED_CUT_COPPER_FENCE = register("waxed_exposed_cut_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WAXED_EXPOSED_CUT_COPPER)));
	public static final RegistryObject<Block> WAXED_WEATHERED_CUT_COPPER_FENCE = register("waxed_weathered_cut_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WAXED_WEATHERED_CUT_COPPER)));
	public static final RegistryObject<Block> WAXED_OXIDIZED_CUT_COPPER_FENCE = register("waxed_oxidized_cut_copper_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.WAXED_OXIDIZED_CUT_COPPER)));
	public static final RegistryObject<Block> DRIPSTONE_BLOCK_FENCE = register("dripstone_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DRIPSTONE_BLOCK)));
	public static final RegistryObject<Block> MOSS_BLOCK_FENCE = register("moss_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.MOSS_BLOCK)));
	public static final RegistryObject<Block> ROOTED_DIRT_FENCE = register("rooted_dirt_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.ROOTED_DIRT)));
	public static final RegistryObject<Block> DEEPSLATE_FENCE = register("deepslate_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE)));
	public static final RegistryObject<Block> COBBLED_DEEPSLATE_FENCE = register("cobbled_deepslate_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.COBBLED_DEEPSLATE)));
	public static final RegistryObject<Block> POLISHED_DEEPSLATE_FENCE = register("polished_deepslate_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.POLISHED_DEEPSLATE)));
	public static final RegistryObject<Block> DEEPSLATE_TILE_FENCE = register("deepslate_tile_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_TILES)));
	public static final RegistryObject<Block> DEEPSLATE_BRICK_FENCE = register("deepslate_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_BRICKS)));
	public static final RegistryObject<Block> CHISELED_DEEPSLATE_FENCE = register("chiseled_deepslate_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CHISELED_DEEPSLATE)));
	public static final RegistryObject<Block> CRACKED_DEEPSLATE_TILE_FENCE = register("cracked_deepslate_tile_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CRACKED_DEEPSLATE_TILES)));
	public static final RegistryObject<Block> CRACKED_DEEPSLATE_BRICK_FENCE = register("cracked_deepslate_brick_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.CRACKED_DEEPSLATE_BRICKS)));
	public static final RegistryObject<Block> SMOOTH_BASALT_FENCE = register("smooth_basalt_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.SMOOTH_BASALT)));
	public static final RegistryObject<Block> RAW_IRON_BLOCK_FENCE = register("raw_iron_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RAW_IRON_BLOCK)));
	public static final RegistryObject<Block> RAW_COPPER_BLOCK_FENCE = register("raw_copper_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RAW_COPPER_BLOCK)));
	public static final RegistryObject<Block> RAW_GOLD_BLOCK_FENCE = register("raw_gold_block_fence", new FenceBlock(BlockBehaviour.Properties.copy(Blocks.RAW_GOLD_BLOCK)));

	private static RegistryObject<Block> register(String name, Block block) {
		ITEMS.register(name, () -> new BlockItem(block, new Item.Properties().tab(VanillaExtension.VanillaExtensionItemGroup.instance)));
		return BLOCKS.register(name, () -> block);
	}

	private static FenceBlock leaves(SoundType soundType) {
		return new FenceBlock(BlockBehaviour.Properties.of(Material.LEAVES).strength(0.2F).randomTicks().sound(soundType).noOcclusion().isValidSpawn((state, getter, pos, entityType) -> entityType == EntityType.OCELOT || entityType == EntityType.PARROT).isSuffocating((state, getter, pos) -> false).isViewBlocking((state, getter, pos) -> false));
	}

}
