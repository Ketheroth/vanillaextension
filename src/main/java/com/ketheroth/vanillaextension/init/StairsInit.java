package com.ketheroth.vanillaextension.init;

import com.ketheroth.vanillaextension.VanillaExtension;
import com.ketheroth.vanillaextension.stairs.*;
import net.minecraft.util.valueproviders.UniformInt;
import net.minecraft.world.item.BlockItem;
import net.minecraft.world.item.Item;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.SoundType;
import net.minecraft.world.level.block.StairBlock;
import net.minecraft.world.level.block.state.BlockBehaviour;
import net.minecraft.world.level.material.Material;
import net.minecraft.world.level.material.MaterialColor;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus;
import net.minecraftforge.fmllegacy.RegistryObject;

import static com.ketheroth.vanillaextension.VanillaExtension.BLOCKS;
import static com.ketheroth.vanillaextension.VanillaExtension.ITEMS;

@SuppressWarnings("unused")
@Mod.EventBusSubscriber(modid = VanillaExtension.MODID, bus = Bus.MOD)
public class StairsInit {

	public static final RegistryObject<Block> farmland_stairs = register("farmland_stairs", new FarmStairs(BlockBehaviour.Properties.copy(Blocks.FARMLAND)));
	public static final RegistryObject<Block> grass_block_stairs = register("grass_block_stairs", new GrassBlockStairs(Blocks.GRASS_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GRASS_BLOCK)));
	public static final RegistryObject<Block> dirt_stairs = register("dirt_stairs", new DirtStairs(Blocks.DIRT::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DIRT)));
	public static final RegistryObject<Block> coarse_dirt_stairs = register("coarse_dirt_stairs", new CoarseDirtStairs(Blocks.COARSE_DIRT::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.COARSE_DIRT)));
	public static final RegistryObject<Block> podzol_stairs = register("podzol_stairs", new StairBlock(Blocks.PODZOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PODZOL)));
	public static final RegistryObject<Block> bedrock_stairs = register("bedrock_stairs", new StairBlock(Blocks.BEDROCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BEDROCK)));
	public static final RegistryObject<Block> sand_stairs = register("sand_stairs", new FallingStairs(BlockBehaviour.Properties.copy(Blocks.SAND)));
	public static final RegistryObject<Block> red_sand_stairs = register("red_sand_stairs", new FallingStairs(BlockBehaviour.Properties.copy(Blocks.RED_SAND)));
	public static final RegistryObject<Block> gravel_stairs = register("gravel_stairs", new FallingStairs(BlockBehaviour.Properties.copy(Blocks.GRAVEL)));
	public static final RegistryObject<Block> gold_ore_stairs = register("gold_ore_stairs", new OreStairs(Blocks.GOLD_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GOLD_ORE)));
	public static final RegistryObject<Block> iron_ore_stairs = register("iron_ore_stairs", new OreStairs(Blocks.IRON_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.IRON_ORE)));
	public static final RegistryObject<Block> coal_ore_stairs = register("coal_ore_stairs", new OreStairs(Blocks.COAL_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.COAL_ORE), UniformInt.of(0, 2)));
	public static final RegistryObject<Block> nether_gold_ore_stairs = register("nether_gold_ore_stairs", new OreStairs(Blocks.NETHER_GOLD_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.NETHER_GOLD_ORE), UniformInt.of(0, 1)));
	public static final RegistryObject<Block> oak_log_stairs = register("oak_log_stairs", new LogStairs(Blocks.OAK_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> spruce_log_stairs = register("spruce_log_stairs", new LogStairs(Blocks.SPRUCE_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> birch_log_stairs = register("birch_log_stairs", new LogStairs(Blocks.BIRCH_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> jungle_log_stairs = register("jungle_log_stairs", new LogStairs(Blocks.JUNGLE_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> acacia_log_stairs = register("acacia_log_stairs", new LogStairs(Blocks.ACACIA_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> dark_oak_log_stairs = register("dark_oak_log_stairs", new LogStairs(Blocks.DARK_OAK_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_oak_log_stairs = register("stripped_oak_log_stairs", new StairBlock(Blocks.STRIPPED_OAK_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_spruce_log_stairs = register("stripped_spruce_log_stairs", new StairBlock(Blocks.STRIPPED_SPRUCE_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_birch_log_stairs = register("stripped_birch_log_stairs", new StairBlock(Blocks.STRIPPED_BIRCH_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_jungle_log_stairs = register("stripped_jungle_log_stairs", new StairBlock(Blocks.STRIPPED_JUNGLE_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_acacia_log_stairs = register("stripped_acacia_log_stairs", new StairBlock(Blocks.STRIPPED_ACACIA_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_dark_oak_log_stairs = register("stripped_dark_oak_log_stairs", new StairBlock(Blocks.STRIPPED_DARK_OAK_LOG::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> oak_wood_stairs = register("oak_wood_stairs", new LogStairs(Blocks.OAK_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> spruce_wood_stairs = register("spruce_wood_stairs", new LogStairs(Blocks.SPRUCE_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> birch_wood_stairs = register("birch_wood_stairs", new LogStairs(Blocks.BIRCH_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> jungle_wood_stairs = register("jungle_wood_stairs", new LogStairs(Blocks.JUNGLE_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> acacia_wood_stairs = register("acacia_wood_stairs", new LogStairs(Blocks.ACACIA_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> dark_oak_wood_stairs = register("dark_oak_wood_stairs", new LogStairs(Blocks.DARK_OAK_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_oak_wood_stairs = register("stripped_oak_wood_stairs", new StairBlock(Blocks.STRIPPED_OAK_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_spruce_wood_stairs = register("stripped_spruce_wood_stairs", new StairBlock(Blocks.STRIPPED_SPRUCE_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_birch_wood_stairs = register("stripped_birch_wood_stairs", new StairBlock(Blocks.STRIPPED_BIRCH_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_jungle_wood_stairs = register("stripped_jungle_wood_stairs", new StairBlock(Blocks.STRIPPED_JUNGLE_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_acacia_wood_stairs = register("stripped_acacia_wood_stairs", new StairBlock(Blocks.STRIPPED_ACACIA_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_dark_oak_wood_stairs = register("stripped_dark_oak_wood_stairs", new StairBlock(Blocks.STRIPPED_DARK_OAK_WOOD::defaultBlockState, BlockBehaviour.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> oak_leaves_stairs = register("oak_leaves_stairs", new StairBlock(Blocks.STONE::defaultBlockState, BlockBehaviour.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> spruce_leaves_stairs = register("spruce_leaves_stairs", new StairBlock(Blocks.STONE::defaultBlockState, BlockBehaviour.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> birch_leaves_stairs = register("birch_leaves_stairs", new StairBlock(Blocks.STONE::defaultBlockState, BlockBehaviour.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> jungle_leaves_stairs = register("jungle_leaves_stairs", new StairBlock(Blocks.STONE::defaultBlockState, BlockBehaviour.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> acacia_leaves_stairs = register("acacia_leaves_stairs", new StairBlock(Blocks.STONE::defaultBlockState, BlockBehaviour.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> dark_oak_leaves_stairs = register("dark_oak_leaves_stairs", new StairBlock(Blocks.STONE::defaultBlockState, BlockBehaviour.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> sponge_stairs = register("sponge_stairs", new StairBlock(Blocks.SPONGE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SPONGE)));
	public static final RegistryObject<Block> wet_sponge_stairs = register("wet_sponge_stairs", new StairBlock(Blocks.WET_SPONGE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WET_SPONGE)));
	public static final RegistryObject<Block> glass_stairs = register("glass_stairs", new StairBlock(Blocks.GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GLASS)));
	public static final RegistryObject<Block> lapis_ore_stairs = register("lapis_ore_stairs", new OreStairs(Blocks.LAPIS_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LAPIS_ORE), UniformInt.of(2,5)));
	public static final RegistryObject<Block> lapis_block_stairs = register("lapis_block_stairs", new StairBlock(Blocks.LAPIS_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LAPIS_BLOCK)));
	public static final RegistryObject<Block> chiseled_sandstone_stairs = register("chiseled_sandstone_stairs", new StairBlock(Blocks.CHISELED_SANDSTONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CHISELED_SANDSTONE)));
	public static final RegistryObject<Block> cut_sandstone_stairs = register("cut_sandstone_stairs", new StairBlock(Blocks.CUT_SANDSTONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CUT_SANDSTONE)));
	public static final RegistryObject<Block> white_wool_stairs = register("white_wool_stairs", new StairBlock(Blocks.WHITE_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WHITE_WOOL)));
	public static final RegistryObject<Block> orange_wool_stairs = register("orange_wool_stairs", new StairBlock(Blocks.ORANGE_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.ORANGE_WOOL)));
	public static final RegistryObject<Block> magenta_wool_stairs = register("magenta_wool_stairs", new StairBlock(Blocks.MAGENTA_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MAGENTA_WOOL)));
	public static final RegistryObject<Block> light_blue_wool_stairs = register("light_blue_wool_stairs", new StairBlock(Blocks.LIGHT_BLUE_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_WOOL)));
	public static final RegistryObject<Block> yellow_wool_stairs = register("yellow_wool_stairs", new StairBlock(Blocks.YELLOW_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.YELLOW_WOOL)));
	public static final RegistryObject<Block> lime_wool_stairs = register("lime_wool_stairs", new StairBlock(Blocks.LIME_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIME_WOOL)));
	public static final RegistryObject<Block> pink_wool_stairs = register("pink_wool_stairs", new StairBlock(Blocks.PINK_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PINK_WOOL)));
	public static final RegistryObject<Block> gray_wool_stairs = register("gray_wool_stairs", new StairBlock(Blocks.GRAY_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GRAY_WOOL)));
	public static final RegistryObject<Block> light_gray_wool_stairs = register("light_gray_wool_stairs", new StairBlock(Blocks.LIGHT_GRAY_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_WOOL)));
	public static final RegistryObject<Block> cyan_wool_stairs = register("cyan_wool_stairs", new StairBlock(Blocks.CYAN_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CYAN_WOOL)));
	public static final RegistryObject<Block> purple_wool_stairs = register("purple_wool_stairs", new StairBlock(Blocks.PURPLE_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PURPLE_WOOL)));
	public static final RegistryObject<Block> blue_wool_stairs = register("blue_wool_stairs", new StairBlock(Blocks.BLUE_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLUE_WOOL)));
	public static final RegistryObject<Block> brown_wool_stairs = register("brown_wool_stairs", new StairBlock(Blocks.BROWN_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BROWN_WOOL)));
	public static final RegistryObject<Block> green_wool_stairs = register("green_wool_stairs", new StairBlock(Blocks.GREEN_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GREEN_WOOL)));
	public static final RegistryObject<Block> red_wool_stairs = register("red_wool_stairs", new StairBlock(Blocks.RED_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RED_WOOL)));
	public static final RegistryObject<Block> black_wool_stairs = register("black_wool_stairs", new StairBlock(Blocks.BLACK_WOOL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLACK_WOOL)));
	public static final RegistryObject<Block> gold_block_stairs = register("gold_block_stairs", new StairBlock(Blocks.GOLD_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GOLD_BLOCK)));
	public static final RegistryObject<Block> iron_block_stairs = register("iron_block_stairs", new StairBlock(Blocks.IRON_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.IRON_BLOCK)));
	public static final RegistryObject<Block> tnt_stairs = register("tnt_stairs", new StairBlock(Blocks.IRON_BLOCK::defaultBlockState, BlockBehaviour.Properties.of(Material.METAL).instabreak().sound(SoundType.GRASS)));
	public static final RegistryObject<Block> bookshelf_stairs = register("bookshelf_stairs", new StairBlock(Blocks.BOOKSHELF::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BOOKSHELF)));
	public static final RegistryObject<Block> obsidian_stairs = register("obsidian_stairs", new StairBlock(Blocks.OBSIDIAN::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.OBSIDIAN)));
	public static final RegistryObject<Block> spawner_stairs = register("spawner_stairs", new StairBlock(Blocks.SPAWNER::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SPAWNER)));
	public static final RegistryObject<Block> diamond_ore_stairs = register("diamond_ore_stairs", new OreStairs(Blocks.DIAMOND_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DIAMOND_ORE), UniformInt.of(3, 7)));
	public static final RegistryObject<Block> diamond_block_stairs = register("diamond_block_stairs", new StairBlock(Blocks.DIAMOND_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DIAMOND_BLOCK)));
	public static final RegistryObject<Block> redstone_ore_stairs = register("redstone_ore_stairs", new RedstoneOreStairs(Blocks.REDSTONE_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.REDSTONE_ORE)));
	public static final RegistryObject<Block> ice_stairs = register("ice_stairs", new StairBlock(Blocks.ICE::defaultBlockState, BlockBehaviour.Properties.of(Material.ICE).friction(0.98F).strength(0.5F).sound(SoundType.GLASS).noOcclusion()));
	public static final RegistryObject<Block> snow_block_stairs = register("snow_block_stairs", new StairBlock(Blocks.SNOW_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SNOW_BLOCK)));
	public static final RegistryObject<Block> clay_stairs = register("clay_stairs", new StairBlock(Blocks.CLAY::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CLAY)));
	public static final RegistryObject<Block> pumpkin_stairs = register("pumpkin_stairs", new PumpkinStairs(Blocks.PUMPKIN::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PUMPKIN)));
	public static final RegistryObject<Block> netherrack_stairs = register("netherrack_stairs", new StairBlock(Blocks.NETHERRACK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.NETHERRACK)));
	public static final RegistryObject<Block> soul_sand_stairs = register("soul_sand_stairs", new StairBlock(Blocks.SOUL_SAND::defaultBlockState, BlockBehaviour.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(0.5F).speedFactor(0.4F).sound(SoundType.SAND)));
	public static final RegistryObject<Block> soul_soil_stairs = register("soul_soil_stairs", new StairBlock(Blocks.SOUL_SOIL::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SOUL_SOIL)));
	public static final RegistryObject<Block> glowstone_stairs = register("glowstone_stairs", new StairBlock(Blocks.GLOWSTONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GLOWSTONE)));
	public static final RegistryObject<Block> carved_pumpkin_stairs = register("carved_pumpkin_stairs", new StairBlock(Blocks.CARVED_PUMPKIN::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CARVED_PUMPKIN)));
	public static final RegistryObject<Block> jack_o_lantern_stairs = register("jack_o_lantern_stairs", new StairBlock(Blocks.JACK_O_LANTERN::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.JACK_O_LANTERN)));
	public static final RegistryObject<Block> white_stained_glass_stairs = register("white_stained_glass_stairs", new StairBlock(Blocks.WHITE_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WHITE_STAINED_GLASS)/*.notSolid()*/));
	public static final RegistryObject<Block> orange_stained_glass_stairs = register("orange_stained_glass_stairs", new StairBlock(Blocks.ORANGE_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.ORANGE_STAINED_GLASS)));
	public static final RegistryObject<Block> magenta_stained_glass_stairs = register("magenta_stained_glass_stairs", new StairBlock(Blocks.MAGENTA_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MAGENTA_STAINED_GLASS)));
	public static final RegistryObject<Block> light_blue_stained_glass_stairs = register("light_blue_stained_glass_stairs", new StairBlock(Blocks.LIGHT_BLUE_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_STAINED_GLASS)));
	public static final RegistryObject<Block> yellow_stained_glass_stairs = register("yellow_stained_glass_stairs", new StairBlock(Blocks.YELLOW_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.YELLOW_STAINED_GLASS)));
	public static final RegistryObject<Block> lime_stained_glass_stairs = register("lime_stained_glass_stairs", new StairBlock(Blocks.LIME_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIME_STAINED_GLASS)));
	public static final RegistryObject<Block> pink_stained_glass_stairs = register("pink_stained_glass_stairs", new StairBlock(Blocks.PINK_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PINK_STAINED_GLASS)));
	public static final RegistryObject<Block> gray_stained_glass_stairs = register("gray_stained_glass_stairs", new StairBlock(Blocks.GRAY_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GRAY_STAINED_GLASS)));
	public static final RegistryObject<Block> light_gray_stained_glass_stairs = register("light_gray_stained_glass_stairs", new StairBlock(Blocks.LIGHT_GRAY_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_STAINED_GLASS)));
	public static final RegistryObject<Block> cyan_stained_glass_stairs = register("cyan_stained_glass_stairs", new StairBlock(Blocks.CYAN_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CYAN_STAINED_GLASS)));
	public static final RegistryObject<Block> purple_stained_glass_stairs = register("purple_stained_glass_stairs", new StairBlock(Blocks.PURPLE_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PURPLE_STAINED_GLASS)));
	public static final RegistryObject<Block> blue_stained_glass_stairs = register("blue_stained_glass_stairs", new StairBlock(Blocks.BLUE_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLUE_STAINED_GLASS)));
	public static final RegistryObject<Block> brown_stained_glass_stairs = register("brown_stained_glass_stairs", new StairBlock(Blocks.BROWN_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BROWN_STAINED_GLASS)));
	public static final RegistryObject<Block> green_stained_glass_stairs = register("green_stained_glass_stairs", new StairBlock(Blocks.GREEN_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GREEN_STAINED_GLASS)));
	public static final RegistryObject<Block> red_stained_glass_stairs = register("red_stained_glass_stairs", new StairBlock(Blocks.RED_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RED_STAINED_GLASS)));
	public static final RegistryObject<Block> black_stained_glass_stairs = register("black_stained_glass_stairs", new StairBlock(Blocks.BLACK_STAINED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLACK_STAINED_GLASS)));
	public static final RegistryObject<Block> oak_trapdoor_stairs = register("oak_trapdoor_stairs", new StairBlock(Blocks.OAK_PLANKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.OAK_TRAPDOOR)));
	public static final RegistryObject<Block> spruce_trapdoor_stairs = register("spruce_trapdoor_stairs", new StairBlock(Blocks.SPRUCE_PLANKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SPRUCE_TRAPDOOR)));
	public static final RegistryObject<Block> birch_trapdoor_stairs = register("birch_trapdoor_stairs", new StairBlock(Blocks.BIRCH_PLANKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BIRCH_TRAPDOOR)));
	public static final RegistryObject<Block> jungle_trapdoor_stairs = register("jungle_trapdoor_stairs", new StairBlock(Blocks.JUNGLE_PLANKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.JUNGLE_TRAPDOOR)));
	public static final RegistryObject<Block> acacia_trapdoor_stairs = register("acacia_trapdoor_stairs", new StairBlock(Blocks.ACACIA_PLANKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.ACACIA_TRAPDOOR)));
	public static final RegistryObject<Block> dark_oak_trapdoor_stairs = register("dark_oak_trapdoor_stairs", new StairBlock(Blocks.DARK_OAK_PLANKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DARK_OAK_TRAPDOOR)));
	public static final RegistryObject<Block> cracked_stone_brick_stairs = register("cracked_stone_brick_stairs", new StairBlock(Blocks.CRACKED_STONE_BRICKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRACKED_STONE_BRICKS)));
	public static final RegistryObject<Block> chiseled_stone_brick_stairs = register("chiseled_stone_brick_stairs", new StairBlock(Blocks.CHISELED_STONE_BRICKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CHISELED_STONE_BRICKS)));
	public static final RegistryObject<Block> brown_mushroom_block_stairs = register("brown_mushroom_block_stairs", new StairBlock(Blocks.BROWN_MUSHROOM_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BROWN_MUSHROOM_BLOCK)));
	public static final RegistryObject<Block> red_mushroom_block_stairs = register("red_mushroom_block_stairs", new StairBlock(Blocks.RED_MUSHROOM_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RED_MUSHROOM_BLOCK)));
	public static final RegistryObject<Block> mushroom_stem_stairs = register("mushroom_stem_stairs", new StairBlock(Blocks.MUSHROOM_STEM::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MUSHROOM_STEM)));
	public static final RegistryObject<Block> iron_bars_stairs = register("iron_bars_stairs", new StairBlock(Blocks.IRON_BARS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.IRON_BARS)));
	public static final RegistryObject<Block> melon_stairs = register("melon_stairs", new StairBlock(Blocks.MELON::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MELON)));
	public static final RegistryObject<Block> vine_stairs = register("vine_stairs", new StairBlock(Blocks.MELON::defaultBlockState, BlockBehaviour.Properties.of(Material.GRASS).noCollission().strength(0.2F).sound(SoundType.GRASS)));
	public static final RegistryObject<Block> mycelium_stairs = register("mycelium_stairs", new MyceliumStairs(Blocks.MYCELIUM::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MYCELIUM)));
	public static final RegistryObject<Block> end_stone_stairs = register("end_stone_stairs", new StairBlock(Blocks.END_STONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.END_STONE)));
	public static final RegistryObject<Block> dragon_egg_stairs = register("dragon_egg_stairs", new StairBlock(Blocks.DRAGON_EGG::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DRAGON_EGG)));
	public static final RegistryObject<Block> redstone_lamp_stairs = register("redstone_lamp_stairs", new RedstoneLampStairs(Blocks.REDSTONE_LAMP::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.REDSTONE_LAMP)));
	public static final RegistryObject<Block> emerald_ore_stairs = register("emerald_ore_stairs", new OreStairs(Blocks.EMERALD_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.EMERALD_ORE), UniformInt.of(3, 7)));
	public static final RegistryObject<Block> emerald_block_stairs = register("emerald_block_stairs", new StairBlock(Blocks.EMERALD_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.EMERALD_BLOCK)));
	public static final RegistryObject<Block> redstone_block_stairs = register("redstone_block_stairs", new StairBlock(Blocks.REDSTONE_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.REDSTONE_BLOCK)));
	public static final RegistryObject<Block> nether_quartz_ore_stairs = register("nether_quartz_ore_stairs", new OreStairs(Blocks.NETHER_QUARTZ_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.NETHER_QUARTZ_ORE), UniformInt.of(2, 5)));
	public static final RegistryObject<Block> hopper_stairs = register("hopper_stairs", new StairBlock(Blocks.IRON_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.IRON_BLOCK)));
	public static final RegistryObject<Block> chiseled_quartz_block_stairs = register("chiseled_quartz_block_stairs", new StairBlock(Blocks.CHISELED_QUARTZ_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CHISELED_QUARTZ_BLOCK)));
	public static final RegistryObject<Block> quartz_pillar_stairs = register("quartz_pillar_stairs", new StairBlock(Blocks.QUARTZ_PILLAR::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.QUARTZ_PILLAR)));
	public static final RegistryObject<Block> white_terracotta_stairs = register("white_terracotta_stairs", new StairBlock(Blocks.WHITE_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WHITE_TERRACOTTA)));
	public static final RegistryObject<Block> orange_terracotta_stairs = register("orange_terracotta_stairs", new StairBlock(Blocks.ORANGE_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.ORANGE_TERRACOTTA)));
	public static final RegistryObject<Block> magenta_terracotta_stairs = register("magenta_terracotta_stairs", new StairBlock(Blocks.MAGENTA_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MAGENTA_TERRACOTTA)));
	public static final RegistryObject<Block> light_blue_terracotta_stairs = register("light_blue_terracotta_stairs", new StairBlock(Blocks.LIGHT_BLUE_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_TERRACOTTA)));
	public static final RegistryObject<Block> yellow_terracotta_stairs = register("yellow_terracotta_stairs", new StairBlock(Blocks.YELLOW_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.YELLOW_TERRACOTTA)));
	public static final RegistryObject<Block> lime_terracotta_stairs = register("lime_terracotta_stairs", new StairBlock(Blocks.LIME_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIME_TERRACOTTA)));
	public static final RegistryObject<Block> pink_terracotta_stairs = register("pink_terracotta_stairs", new StairBlock(Blocks.PINK_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PINK_TERRACOTTA)));
	public static final RegistryObject<Block> gray_terracotta_stairs = register("gray_terracotta_stairs", new StairBlock(Blocks.GRAY_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GRAY_TERRACOTTA)));
	public static final RegistryObject<Block> light_gray_terracotta_stairs = register("light_gray_terracotta_stairs", new StairBlock(Blocks.LIGHT_GRAY_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_TERRACOTTA)));
	public static final RegistryObject<Block> cyan_terracotta_stairs = register("cyan_terracotta_stairs", new StairBlock(Blocks.CYAN_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CYAN_TERRACOTTA)));
	public static final RegistryObject<Block> purple_terracotta_stairs = register("purple_terracotta_stairs", new StairBlock(Blocks.PURPLE_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PURPLE_TERRACOTTA)));
	public static final RegistryObject<Block> blue_terracotta_stairs = register("blue_terracotta_stairs", new StairBlock(Blocks.BLUE_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLUE_TERRACOTTA)));
	public static final RegistryObject<Block> brown_terracotta_stairs = register("brown_terracotta_stairs", new StairBlock(Blocks.BROWN_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BROWN_TERRACOTTA)));
	public static final RegistryObject<Block> green_terracotta_stairs = register("green_terracotta_stairs", new StairBlock(Blocks.GREEN_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GREEN_TERRACOTTA)));
	public static final RegistryObject<Block> red_terracotta_stairs = register("red_terracotta_stairs", new StairBlock(Blocks.RED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RED_TERRACOTTA)));
	public static final RegistryObject<Block> black_terracotta_stairs = register("black_terracotta_stairs", new StairBlock(Blocks.BLACK_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLACK_TERRACOTTA)));
	public static final RegistryObject<Block> slime_block_stairs = register("slime_block_stairs", new StairBlock(Blocks.SLIME_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SLIME_BLOCK)));
	public static final RegistryObject<Block> iron_trapdoor_stairs = register("iron_trapdoor_stairs", new StairBlock(Blocks.IRON_TRAPDOOR::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.IRON_TRAPDOOR)));
	public static final RegistryObject<Block> sea_lantern_stairs = register("sea_lantern_stairs", new StairBlock(Blocks.SEA_LANTERN::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SEA_LANTERN)));
	public static final RegistryObject<Block> hay_block_stairs = register("hay_block_stairs", new StairBlock(Blocks.HAY_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.HAY_BLOCK)));
	public static final RegistryObject<Block> terracotta_stairs = register("terracotta_stairs", new StairBlock(Blocks.TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.TERRACOTTA)));
	public static final RegistryObject<Block> coal_block_stairs = register("coal_block_stairs", new StairBlock(Blocks.COAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.COAL_BLOCK)));
	public static final RegistryObject<Block> packed_ice_stairs = register("packed_ice_stairs", new StairBlock(Blocks.PACKED_ICE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PACKED_ICE)));
	public static final RegistryObject<Block> chiseled_red_sandstone_stairs = register("chiseled_red_sandstone_stairs", new StairBlock(Blocks.CHISELED_RED_SANDSTONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CHISELED_RED_SANDSTONE)));
	public static final RegistryObject<Block> cut_red_sandstone_stairs = register("cut_red_sandstone_stairs", new StairBlock(Blocks.CUT_RED_SANDSTONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CUT_RED_SANDSTONE)));
	public static final RegistryObject<Block> smooth_stone_stairs = register("smooth_stone_stairs", new StairBlock(Blocks.SMOOTH_STONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SMOOTH_STONE)));
	public static final RegistryObject<Block> purpur_pillar_stairs = register("purpur_pillar_stairs", new StairBlock(Blocks.PURPUR_PILLAR::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PURPUR_PILLAR)));
	public static final RegistryObject<Block> dirt_path_stairs = register("dirt_path_stairs", new DirtPathStairs(Blocks.DIRT_PATH::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DIRT_PATH)));
	public static final RegistryObject<Block> magma_block_stairs = register("magma_block_stairs", new StairBlock(Blocks.MAGMA_BLOCK::defaultBlockState, BlockBehaviour.Properties.of(Material.STONE, MaterialColor.NETHER).lightLevel((state) -> 3).strength(0.5F)));
	public static final RegistryObject<Block> nether_wart_block_stairs = register("nether_wart_block_stairs", new StairBlock(Blocks.NETHER_WART_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.NETHER_WART_BLOCK)));
	public static final RegistryObject<Block> bone_block_stairs = register("bone_block_stairs", new StairBlock(Blocks.BONE_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BONE_BLOCK)));
	public static final RegistryObject<Block> white_glazed_terracotta_stairs = register("white_glazed_terracotta_stairs", new StairBlock(Blocks.WHITE_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WHITE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> orange_glazed_terracotta_stairs = register("orange_glazed_terracotta_stairs", new StairBlock(Blocks.ORANGE_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.ORANGE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> magenta_glazed_terracotta_stairs = register("magenta_glazed_terracotta_stairs", new StairBlock(Blocks.MAGENTA_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MAGENTA_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> light_blue_glazed_terracotta_stairs = register("light_blue_glazed_terracotta_stairs", new StairBlock(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> yellow_glazed_terracotta_stairs = register("yellow_glazed_terracotta_stairs", new StairBlock(Blocks.YELLOW_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.YELLOW_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> lime_glazed_terracotta_stairs = register("lime_glazed_terracotta_stairs", new StairBlock(Blocks.LIME_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIME_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> pink_glazed_terracotta_stairs = register("pink_glazed_terracotta_stairs", new StairBlock(Blocks.PINK_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PINK_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> gray_glazed_terracotta_stairs = register("gray_glazed_terracotta_stairs", new StairBlock(Blocks.GRAY_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GRAY_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> light_gray_glazed_terracotta_stairs = register("light_gray_glazed_terracotta_stairs", new StairBlock(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> cyan_glazed_terracotta_stairs = register("cyan_glazed_terracotta_stairs", new StairBlock(Blocks.CYAN_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CYAN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> purple_glazed_terracotta_stairs = register("purple_glazed_terracotta_stairs", new StairBlock(Blocks.PURPLE_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PURPLE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> blue_glazed_terracotta_stairs = register("blue_glazed_terracotta_stairs", new StairBlock(Blocks.BLUE_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLUE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> brown_glazed_terracotta_stairs = register("brown_glazed_terracotta_stairs", new StairBlock(Blocks.BROWN_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BROWN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> green_glazed_terracotta_stairs = register("green_glazed_terracotta_stairs", new StairBlock(Blocks.GREEN_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GREEN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> red_glazed_terracotta_stairs = register("red_glazed_terracotta_stairs", new StairBlock(Blocks.RED_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RED_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> black_glazed_terracotta_stairs = register("black_glazed_terracotta_stairs", new StairBlock(Blocks.BLACK_GLAZED_TERRACOTTA::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLACK_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> white_concrete_stairs = register("white_concrete_stairs", new StairBlock(Blocks.WHITE_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WHITE_CONCRETE)));
	public static final RegistryObject<Block> orange_concrete_stairs = register("orange_concrete_stairs", new StairBlock(Blocks.ORANGE_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.ORANGE_CONCRETE)));
	public static final RegistryObject<Block> magenta_concrete_stairs = register("magenta_concrete_stairs", new StairBlock(Blocks.MAGENTA_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MAGENTA_CONCRETE)));
	public static final RegistryObject<Block> light_blue_concrete_stairs = register("light_blue_concrete_stairs", new StairBlock(Blocks.LIGHT_BLUE_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_CONCRETE)));
	public static final RegistryObject<Block> yellow_concrete_stairs = register("yellow_concrete_stairs", new StairBlock(Blocks.YELLOW_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.YELLOW_CONCRETE)));
	public static final RegistryObject<Block> lime_concrete_stairs = register("lime_concrete_stairs", new StairBlock(Blocks.LIME_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIME_CONCRETE)));
	public static final RegistryObject<Block> pink_concrete_stairs = register("pink_concrete_stairs", new StairBlock(Blocks.PINK_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PINK_CONCRETE)));
	public static final RegistryObject<Block> gray_concrete_stairs = register("gray_concrete_stairs", new StairBlock(Blocks.GRAY_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GRAY_CONCRETE)));
	public static final RegistryObject<Block> light_gray_concrete_stairs = register("light_gray_concrete_stairs", new StairBlock(Blocks.LIGHT_GRAY_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_CONCRETE)));
	public static final RegistryObject<Block> cyan_concrete_stairs = register("cyan_concrete_stairs", new StairBlock(Blocks.CYAN_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CYAN_CONCRETE)));
	public static final RegistryObject<Block> purple_concrete_stairs = register("purple_concrete_stairs", new StairBlock(Blocks.PURPLE_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.PURPLE_CONCRETE)));
	public static final RegistryObject<Block> blue_concrete_stairs = register("blue_concrete_stairs", new StairBlock(Blocks.BLUE_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLUE_CONCRETE)));
	public static final RegistryObject<Block> brown_concrete_stairs = register("brown_concrete_stairs", new StairBlock(Blocks.BROWN_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BROWN_CONCRETE)));
	public static final RegistryObject<Block> green_concrete_stairs = register("green_concrete_stairs", new StairBlock(Blocks.GREEN_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GREEN_CONCRETE)));
	public static final RegistryObject<Block> red_concrete_stairs = register("red_concrete_stairs", new StairBlock(Blocks.RED_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RED_CONCRETE)));
	public static final RegistryObject<Block> black_concrete_stairs = register("black_concrete_stairs", new StairBlock(Blocks.BLACK_CONCRETE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLACK_CONCRETE)));
	public static final RegistryObject<Block> white_concrete_powder_stairs = register("white_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.WHITE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> orange_concrete_powder_stairs = register("orange_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.ORANGE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> magenta_concrete_powder_stairs = register("magenta_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.MAGENTA_CONCRETE_POWDER)));
	public static final RegistryObject<Block> light_blue_concrete_powder_stairs = register("light_blue_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.LIGHT_BLUE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> yellow_concrete_powder_stairs = register("yellow_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.YELLOW_CONCRETE_POWDER)));
	public static final RegistryObject<Block> lime_concrete_powder_stairs = register("lime_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.LIME_CONCRETE_POWDER)));
	public static final RegistryObject<Block> pink_concrete_powder_stairs = register("pink_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.PINK_CONCRETE_POWDER)));
	public static final RegistryObject<Block> gray_concrete_powder_stairs = register("gray_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.GRAY_CONCRETE_POWDER)));
	public static final RegistryObject<Block> light_gray_concrete_powder_stairs = register("light_gray_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.LIGHT_GRAY_CONCRETE_POWDER)));
	public static final RegistryObject<Block> cyan_concrete_powder_stairs = register("cyan_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.CYAN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> purple_concrete_powder_stairs = register("purple_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.PURPLE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> blue_concrete_powder_stairs = register("blue_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.BLUE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> brown_concrete_powder_stairs = register("brown_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.BROWN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> green_concrete_powder_stairs = register("green_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.GREEN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> red_concrete_powder_stairs = register("red_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.RED_CONCRETE_POWDER)));
	public static final RegistryObject<Block> black_concrete_powder_stairs = register("black_concrete_powder_stairs", new ConcretePowderStairs(BlockBehaviour.Properties.copy(Blocks.BLACK_CONCRETE_POWDER)));
	public static final RegistryObject<Block> dried_kelp_block_stairs = register("dried_kelp_block_stairs", new StairBlock(Blocks.DRIED_KELP_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DRIED_KELP_BLOCK)));
	public static final RegistryObject<Block> dead_tube_coral_block_stairs = register("dead_tube_coral_block_stairs", new StairBlock(Blocks.DEAD_TUBE_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEAD_TUBE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_brain_coral_block_stairs = register("dead_brain_coral_block_stairs", new StairBlock(Blocks.DEAD_BRAIN_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEAD_BRAIN_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_bubble_coral_block_stairs = register("dead_bubble_coral_block_stairs", new StairBlock(Blocks.DEAD_BUBBLE_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEAD_BUBBLE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_fire_coral_block_stairs = register("dead_fire_coral_block_stairs", new StairBlock(Blocks.DEAD_FIRE_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEAD_FIRE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_horn_coral_block_stairs = register("dead_horn_coral_block_stairs", new StairBlock(Blocks.DEAD_HORN_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEAD_HORN_CORAL_BLOCK)));
	public static final RegistryObject<Block> tube_coral_block_stairs = register("tube_coral_block_stairs", new StairBlock(Blocks.TUBE_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.TUBE_CORAL_BLOCK)));
	public static final RegistryObject<Block> brain_coral_block_stairs = register("brain_coral_block_stairs", new StairBlock(Blocks.BRAIN_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BRAIN_CORAL_BLOCK)));
	public static final RegistryObject<Block> bubble_coral_block_stairs = register("bubble_coral_block_stairs", new StairBlock(Blocks.BUBBLE_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BUBBLE_CORAL_BLOCK)));
	public static final RegistryObject<Block> fire_coral_block_stairs = register("fire_coral_block_stairs", new StairBlock(Blocks.FIRE_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.FIRE_CORAL_BLOCK)));
	public static final RegistryObject<Block> horn_coral_block_stairs = register("horn_coral_block_stairs", new StairBlock(Blocks.HORN_CORAL_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.HORN_CORAL_BLOCK)));
	public static final RegistryObject<Block> blue_ice_stairs = register("blue_ice_stairs", new StairBlock(Blocks.BLUE_ICE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BLUE_ICE)));
	public static final RegistryObject<Block> honey_block_stairs = register("honey_block_stairs", new StairBlock(Blocks.HONEY_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.HONEY_BLOCK)));
	public static final RegistryObject<Block> honeycomb_block_stairs = register("honeycomb_block_stairs", new StairBlock(Blocks.HONEYCOMB_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.HONEYCOMB_BLOCK)));
	public static final RegistryObject<Block> warped_stem_stairs = register("warped_stem_stairs", new LogStairs(Blocks.WARPED_STEM::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WARPED_STEM)));
	public static final RegistryObject<Block> stripped_warped_stem_stairs = register("stripped_warped_stem_stairs", new StairBlock(Blocks.STRIPPED_WARPED_STEM::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.STRIPPED_WARPED_STEM)));
	public static final RegistryObject<Block> warped_hyphae_stairs = register("warped_hyphae_stairs", new LogStairs(Blocks.WARPED_HYPHAE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WARPED_HYPHAE)));
	public static final RegistryObject<Block> stripped_warped_hyphae_stairs = register("stripped_warped_hyphae_stairs", new StairBlock(Blocks.STRIPPED_WARPED_HYPHAE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.STRIPPED_WARPED_HYPHAE)));
	public static final RegistryObject<Block> warped_nylium_stairs = register("warped_nylium_stairs", new StairBlock(Blocks.WARPED_NYLIUM::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WARPED_NYLIUM)));
	public static final RegistryObject<Block> warped_wart_block_stairs = register("warped_wart_block_stairs", new StairBlock(Blocks.WARPED_WART_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WARPED_WART_BLOCK)));
	public static final RegistryObject<Block> crimson_stem_stairs = register("crimson_stem_stairs", new LogStairs(Blocks.CRIMSON_STEM::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRIMSON_STEM)));
	public static final RegistryObject<Block> stripped_crimson_stem_stairs = register("stripped_crimson_stem_stairs", new StairBlock(Blocks.STRIPPED_CRIMSON_STEM::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.STRIPPED_CRIMSON_STEM)));
	public static final RegistryObject<Block> crimson_hyphae_stairs = register("crimson_hyphae_stairs", new LogStairs(Blocks.CRIMSON_HYPHAE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRIMSON_HYPHAE)));
	public static final RegistryObject<Block> stripped_crimson_hyphae_stairs = register("stripped_crimson_hyphae_stairs", new StairBlock(Blocks.STRIPPED_CRIMSON_HYPHAE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.STRIPPED_CRIMSON_HYPHAE)));
	public static final RegistryObject<Block> crimson_nylium_stairs = register("crimson_nylium_stairs", new StairBlock(Blocks.CRIMSON_NYLIUM::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRIMSON_NYLIUM)));
	public static final RegistryObject<Block> shroomlight_stairs = register("shroomlight_stairs", new StairBlock(Blocks.SHROOMLIGHT::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SHROOMLIGHT)));
	public static final RegistryObject<Block> netherite_block_stairs = register("netherite_block_stairs", new StairBlock(Blocks.NETHERITE_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.NETHERITE_BLOCK)));
	public static final RegistryObject<Block> ancient_debris_stairs = register("ancient_debris_stairs", new StairBlock(Blocks.ANCIENT_DEBRIS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.ANCIENT_DEBRIS)));
	public static final RegistryObject<Block> crying_obsidian_stairs = register("crying_obsidian_stairs", new StairBlock(Blocks.CRYING_OBSIDIAN::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRYING_OBSIDIAN)));
	public static final RegistryObject<Block> basalt_stairs = register("basalt_stairs", new StairBlock(Blocks.BASALT::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BASALT)));
	public static final RegistryObject<Block> polished_basalt_stairs = register("polished_basalt_stairs", new StairBlock(Blocks.POLISHED_BASALT::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.POLISHED_BASALT)));
	public static final RegistryObject<Block> cracked_polished_blackstone_brick_stairs = register("cracked_polished_blackstone_brick_stairs", new StairBlock(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS)));
	public static final RegistryObject<Block> chiseled_polished_blackstone_stairs = register("chiseled_polished_blackstone_stairs", new StairBlock(Blocks.CHISELED_POLISHED_BLACKSTONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CHISELED_POLISHED_BLACKSTONE)));
	public static final RegistryObject<Block> gilded_blackstone_stairs = register("gilded_blackstone_stairs", new StairBlock(Blocks.GILDED_BLACKSTONE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GILDED_BLACKSTONE)));
	public static final RegistryObject<Block> chiseled_nether_brick_stairs = register("chiseled_nether_brick_stairs", new StairBlock(Blocks.CHISELED_NETHER_BRICKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CHISELED_NETHER_BRICKS)));
	public static final RegistryObject<Block> cracked_nether_brick_stairs = register("cracked_nether_brick_stairs", new StairBlock(Blocks.CRACKED_NETHER_BRICKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRACKED_NETHER_BRICKS)));
	public static final RegistryObject<Block> quartz_brick_stairs = register("quartz_brick_stairs", new StairBlock(Blocks.QUARTZ_BRICKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.QUARTZ_BRICKS)));
	public static final RegistryObject<Block> AMETHYST_BLOCK_STAIRS = register("amethyst_block_stairs", new StairBlock(Blocks.AMETHYST_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.AMETHYST_BLOCK)));
	public static final RegistryObject<Block> AZALEA_LEAVES_STAIRS = register("azalea_leaves_stairs", new StairBlock(Blocks.AZALEA_LEAVES::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.AZALEA_LEAVES)));
	public static final RegistryObject<Block> BUDDING_AMETHYST_STAIRS = register("budding_amethyst_stairs", new StairBlock(Blocks.BUDDING_AMETHYST::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.BUDDING_AMETHYST)));
	public static final RegistryObject<Block> CALCITE_STAIRS = register("calcite_stairs", new StairBlock(Blocks.CALCITE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CALCITE)));
	public static final RegistryObject<Block> CHISELED_DEEPSLATE_STAIRS = register("chiseled_deepslate_stairs", new StairBlock(Blocks.CHISELED_DEEPSLATE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CHISELED_DEEPSLATE)));
	public static final RegistryObject<Block> COPPER_BLOCK_STAIRS = register("copper_block_stairs", new StairBlock(Blocks.COPPER_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.COPPER_BLOCK)));
	public static final RegistryObject<Block> COPPER_ORE_STAIRS = register("copper_ore_stairs", new StairBlock(Blocks.COPPER_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.COPPER_ORE)));
	public static final RegistryObject<Block> CRACKED_DEEPSLATE_BRICK_STAIRS = register("cracked_deepslate_brick_stairs", new StairBlock(Blocks.CRACKED_DEEPSLATE_BRICKS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRACKED_DEEPSLATE_BRICKS)));
	public static final RegistryObject<Block> CRACKED_DEEPSLATE_TILE_STAIRS = register("cracked_deepslate_tile_stairs", new StairBlock(Blocks.CRACKED_DEEPSLATE_TILES::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.CRACKED_DEEPSLATE_TILES)));
	public static final RegistryObject<Block> DEEPSLATE_COAL_ORE_STAIRS = register("deepslate_coal_ore_stairs", new StairBlock(Blocks.DEEPSLATE_COAL_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_COAL_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_COPPER_ORE_STAIRS = register("deepslate_copper_ore_stairs", new StairBlock(Blocks.DEEPSLATE_COPPER_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_COPPER_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_DIAMOND_ORE_STAIRS = register("deepslate_diamond_ore_stairs", new StairBlock(Blocks.DEEPSLATE_DIAMOND_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_DIAMOND_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_EMERALD_ORE_STAIRS = register("deepslate_emerald_ore_stairs", new StairBlock(Blocks.DEEPSLATE_EMERALD_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_EMERALD_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_GOLD_ORE_STAIRS = register("deepslate_gold_ore_stairs", new StairBlock(Blocks.DEEPSLATE_GOLD_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_GOLD_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_IRON_ORE_STAIRS = register("deepslate_iron_ore_stairs", new StairBlock(Blocks.DEEPSLATE_IRON_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_IRON_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_LAPIS_ORE_STAIRS = register("deepslate_lapis_ore_stairs", new StairBlock(Blocks.DEEPSLATE_LAPIS_ORE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEEPSLATE_LAPIS_ORE)));
	public static final RegistryObject<Block> DEEPSLATE_REDSTONE_ORE_STAIRS = register("deepslate_redstone_ore_stairs", new StairBlock(Blocks.DEEPSLATE_REDSTONE_ORE::defaultBlockState, BlockBehaviour.Properties.of(Material.STONE).requiresCorrectToolForDrops().lightLevel(/*litBlockEmission(9)*/ state -> 9).color(MaterialColor.DEEPSLATE).strength(4.5F, 3.0F).sound(SoundType.DEEPSLATE)));
	public static final RegistryObject<Block> DEEPSLATE_STAIRS = register("deepslate_stairs", new StairBlock(Blocks.DEEPSLATE::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DEEPSLATE)));
	public static final RegistryObject<Block> DRIPSTONE_BLOCK_STAIRS = register("dripstone_block_stairs", new StairBlock(Blocks.DRIPSTONE_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.DRIPSTONE_BLOCK)));
	public static final RegistryObject<Block> EXPOSED_COPPER_STAIRS = register("exposed_copper_stairs", new StairBlock(Blocks.EXPOSED_COPPER::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.EXPOSED_COPPER)));
	public static final RegistryObject<Block> FLOWERING_AZALEA_LEAVES_STAIRS = register("flowering_azalea_leaves_stairs", new StairBlock(Blocks.FLOWERING_AZALEA_LEAVES::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.FLOWERING_AZALEA_LEAVES)));
	public static final RegistryObject<Block> GLOW_LICHEN_STAIRS = register("glow_lichen_stairs", new StairBlock(Blocks.GLOW_LICHEN::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.GLOW_LICHEN)));
	public static final RegistryObject<Block> MOSS_BLOCK_STAIRS = register("moss_block_stairs", new StairBlock(Blocks.MOSS_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.MOSS_BLOCK)));
	public static final RegistryObject<Block> OXIDIZED_COPPER_STAIRS = register("oxidized_copper_stairs", new StairBlock(Blocks.OXIDIZED_COPPER::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.OXIDIZED_COPPER)));
	public static final RegistryObject<Block> RAW_COPPER_BLOCK_STAIRS = register("raw_copper_block_stairs", new StairBlock(Blocks.RAW_COPPER_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RAW_COPPER_BLOCK)));
	public static final RegistryObject<Block> RAW_GOLD_BLOCK_STAIRS = register("raw_gold_block_stairs", new StairBlock(Blocks.RAW_GOLD_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RAW_GOLD_BLOCK)));
	public static final RegistryObject<Block> RAW_IRON_BLOCK_STAIRS = register("raw_iron_block_stairs", new StairBlock(Blocks.RAW_IRON_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.RAW_IRON_BLOCK)));
	public static final RegistryObject<Block> ROOTED_DIRT_STAIRS = register("rooted_dirt_stairs", new StairBlock(Blocks.ROOTED_DIRT::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.ROOTED_DIRT)));
	public static final RegistryObject<Block> SMOOTH_BASALT_STAIRS = register("smooth_basalt_stairs", new StairBlock(Blocks.SMOOTH_BASALT::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.SMOOTH_BASALT)));
	public static final RegistryObject<Block> TINTED_GLASS_STAIRS = register("tinted_glass_stairs", new StairBlock(Blocks.TINTED_GLASS::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.TINTED_GLASS)));
	public static final RegistryObject<Block> TUFF_STAIRS = register("tuff_stairs", new StairBlock(Blocks.TUFF::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.TUFF)));
	public static final RegistryObject<Block> WAXED_COPPER_BLOCK_STAIRS = register("waxed_copper_block_stairs", new StairBlock(Blocks.WAXED_COPPER_BLOCK::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WAXED_COPPER_BLOCK)));
	public static final RegistryObject<Block> WAXED_EXPOSED_COPPER_STAIRS = register("waxed_exposed_copper_stairs", new StairBlock(Blocks.WAXED_EXPOSED_COPPER::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WAXED_EXPOSED_COPPER)));
	public static final RegistryObject<Block> WAXED_OXIDIZED_COPPER_STAIRS = register("waxed_oxidized_copper_stairs", new StairBlock(Blocks.WAXED_OXIDIZED_COPPER::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WAXED_OXIDIZED_COPPER)));
	public static final RegistryObject<Block> WAXED_WEATHERED_COPPER_STAIRS = register("waxed_weathered_copper_stairs", new StairBlock(Blocks.WAXED_WEATHERED_COPPER::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WAXED_WEATHERED_COPPER)));
	public static final RegistryObject<Block> WEATHERED_COPPER_STAIRS = register("weathered_copper_stairs", new StairBlock(Blocks.WEATHERED_COPPER::defaultBlockState, BlockBehaviour.Properties.copy(Blocks.WEATHERED_COPPER)));

	private static RegistryObject<Block> register(String name, Block block) {
		ITEMS.register(name, () -> new BlockItem(block, new Item.Properties().tab(VanillaExtension.VanillaExtensionItemGroup.instance)));
		return BLOCKS.register(name, () -> block);
	}

}
