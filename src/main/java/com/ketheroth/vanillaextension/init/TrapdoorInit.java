package com.ketheroth.vanillaextension.init;

import com.ketheroth.vanillaextension.VanillaExtension;
import com.ketheroth.vanillaextension.trapdoors.*;
import net.minecraft.block.*;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus;

import static com.ketheroth.vanillaextension.VanillaExtension.BLOCKS;
import static com.ketheroth.vanillaextension.VanillaExtension.ITEMS;

@Mod.EventBusSubscriber(modid = VanillaExtension.MODID, bus = Bus.MOD)
public class TrapdoorInit {

	public static final RegistryObject<Block> stone_trapdoor = register("stone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.STONE)));
	public static final RegistryObject<Block> granite_trapdoor = register("granite_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GRANITE)));
	public static final RegistryObject<Block> polished_granite_trapdoor = register("polished_granite_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_GRANITE)));
	public static final RegistryObject<Block> diorite_trapdoor = register("diorite_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DIORITE)));
	public static final RegistryObject<Block> polished_diorite_trapdoor = register("polished_diorite_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_DIORITE)));
	public static final RegistryObject<Block> andesite_trapdoor = register("andesite_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.ANDESITE)));
	public static final RegistryObject<Block> polished_andesite_trapdoor = register("polished_andesite_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_ANDESITE)));
	public static final RegistryObject<Block> grass_block_trapdoor = register("grass_block_trapdoor", new GrassBlockTrapdoor(AbstractBlock.Properties.copy(Blocks.GRASS_BLOCK)));
	public static final RegistryObject<Block> dirt_trapdoor = register("dirt_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DIRT)));
	public static final RegistryObject<Block> coarse_dirt_trapdoor = register("coarse_dirt_trapdoor", new CoarseDirtTrapdoor(AbstractBlock.Properties.copy(Blocks.COARSE_DIRT)));
	public static final RegistryObject<Block> podzol_trapdoor = register("podzol_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PODZOL)));
	public static final RegistryObject<Block> cobblestone_trapdoor = register("cobblestone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.COBBLESTONE)));
	public static final RegistryObject<Block> bedrock_trapdoor = register("bedrock_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BEDROCK)));
	public static final RegistryObject<Block> sand_trapdoor = register("sand_trapdoor", new FallingTrapdoor(AbstractBlock.Properties.copy(Blocks.SAND)));
	public static final RegistryObject<Block> red_sand_trapdoor = register("red_sand_trapdoor", new FallingTrapdoor(AbstractBlock.Properties.copy(Blocks.RED_SAND)));
	public static final RegistryObject<Block> gravel_trapdoor = register("gravel_trapdoor", new FallingTrapdoor(AbstractBlock.Properties.copy(Blocks.GRAVEL)));
	public static final RegistryObject<Block> gold_ore_trapdoor = register("gold_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.copy(Blocks.GOLD_ORE)));
	public static final RegistryObject<Block> iron_ore_trapdoor = register("iron_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.copy(Blocks.IRON_ORE)));
	public static final RegistryObject<Block> coal_ore_trapdoor = register("coal_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.copy(Blocks.COAL_ORE)));
	public static final RegistryObject<Block> nether_gold_ore_trapdoor = register("nether_gold_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.copy(Blocks.NETHER_GOLD_ORE)));
	public static final RegistryObject<Block> oak_log_trapdoor = register("oak_log_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD)));
	public static final RegistryObject<Block> spruce_log_trapdoor = register("spruce_log_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL)));
	public static final RegistryObject<Block> birch_log_trapdoor = register("birch_log_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND)));
	public static final RegistryObject<Block> jungle_log_trapdoor = register("jungle_log_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT)));
	public static final RegistryObject<Block> acacia_log_trapdoor = register("acacia_log_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE)));
	public static final RegistryObject<Block> dark_oak_log_trapdoor = register("dark_oak_log_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN)));
	public static final RegistryObject<Block> stripped_oak_log_trapdoor = register("stripped_oak_log_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD)));
	public static final RegistryObject<Block> stripped_spruce_log_trapdoor = register("stripped_spruce_log_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL)));
	public static final RegistryObject<Block> stripped_birch_log_trapdoor = register("stripped_birch_log_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND)));
	public static final RegistryObject<Block> stripped_jungle_log_trapdoor = register("stripped_jungle_log_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT)));
	public static final RegistryObject<Block> stripped_acacia_log_trapdoor = register("stripped_acacia_log_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE)));
	public static final RegistryObject<Block> stripped_dark_oak_log_trapdoor = register("stripped_dark_oak_log_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN)));
	public static final RegistryObject<Block> oak_wood_trapdoor = register("oak_wood_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD)));
	public static final RegistryObject<Block> spruce_wood_trapdoor = register("spruce_wood_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL)));
	public static final RegistryObject<Block> birch_wood_trapdoor = register("birch_wood_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND)));
	public static final RegistryObject<Block> jungle_wood_trapdoor = register("jungle_wood_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT)));
	public static final RegistryObject<Block> acacia_wood_trapdoor = register("acacia_wood_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY)));
	public static final RegistryObject<Block> dark_oak_wood_trapdoor = register("dark_oak_wood_trapdoor", new LogTrapdoor(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN)));
	public static final RegistryObject<Block> stripped_oak_wood_trapdoor = register("stripped_oak_wood_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD)));
	public static final RegistryObject<Block> stripped_spruce_wood_trapdoor = register("stripped_spruce_wood_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL)));
	public static final RegistryObject<Block> stripped_birch_wood_trapdoor = register("stripped_birch_wood_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND)));
	public static final RegistryObject<Block> stripped_jungle_wood_trapdoor = register("stripped_jungle_wood_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT)));
	public static final RegistryObject<Block> stripped_acacia_wood_trapdoor = register("stripped_acacia_wood_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE)));
	public static final RegistryObject<Block> stripped_dark_oak_wood_trapdoor = register("stripped_dark_oak_wood_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN)));
	public static final RegistryObject<Block> oak_leaves_trapdoor = register("oak_leaves_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> spruce_leaves_trapdoor = register("spruce_leaves_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> birch_leaves_trapdoor = register("birch_leaves_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> jungle_leaves_trapdoor = register("jungle_leaves_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> acacia_leaves_trapdoor = register("acacia_leaves_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> dark_oak_leaves_trapdoor = register("dark_oak_leaves_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.LEAVES).strength(0.2f).sound(SoundType.GRASS).noOcclusion().isViewBlocking((state, reader, pos) -> false)));
	public static final RegistryObject<Block> sponge_trapdoor = register("sponge_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SPONGE)));
	public static final RegistryObject<Block> wet_sponge_trapdoor = register("wet_sponge_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.WET_SPONGE)));
	public static final RegistryObject<Block> glass_trapdoor = register("glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GLASS)));
	public static final RegistryObject<Block> lapis_ore_trapdoor = register("lapis_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.copy(Blocks.LAPIS_ORE)));
	public static final RegistryObject<Block> lapis_block_trapdoor = register("lapis_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LAPIS_BLOCK)));
	public static final RegistryObject<Block> sandstone_trapdoor = register("sandstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SANDSTONE)));
	public static final RegistryObject<Block> chiseled_sandstone_trapdoor = register("chiseled_sandstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_SANDSTONE)));
	public static final RegistryObject<Block> cut_sandstone_trapdoor = register("cut_sandstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CUT_SANDSTONE)));
	public static final RegistryObject<Block> white_wool_trapdoor = register("white_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.WHITE_WOOL)));
	public static final RegistryObject<Block> orange_wool_trapdoor = register("orange_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_WOOL)));
	public static final RegistryObject<Block> magenta_wool_trapdoor = register("magenta_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_WOOL)));
	public static final RegistryObject<Block> light_blue_wool_trapdoor = register("light_blue_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_WOOL)));
	public static final RegistryObject<Block> yellow_wool_trapdoor = register("yellow_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_WOOL)));
	public static final RegistryObject<Block> lime_wool_trapdoor = register("lime_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIME_WOOL)));
	public static final RegistryObject<Block> pink_wool_trapdoor = register("pink_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PINK_WOOL)));
	public static final RegistryObject<Block> gray_wool_trapdoor = register("gray_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GRAY_WOOL)));
	public static final RegistryObject<Block> light_gray_wool_trapdoor = register("light_gray_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_WOOL)));
	public static final RegistryObject<Block> cyan_wool_trapdoor = register("cyan_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CYAN_WOOL)));
	public static final RegistryObject<Block> purple_wool_trapdoor = register("purple_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_WOOL)));
	public static final RegistryObject<Block> blue_wool_trapdoor = register("blue_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLUE_WOOL)));
	public static final RegistryObject<Block> brown_wool_trapdoor = register("brown_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BROWN_WOOL)));
	public static final RegistryObject<Block> green_wool_trapdoor = register("green_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GREEN_WOOL)));
	public static final RegistryObject<Block> red_wool_trapdoor = register("red_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.RED_WOOL)));
	public static final RegistryObject<Block> black_wool_trapdoor = register("black_wool_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLACK_WOOL)));
	public static final RegistryObject<Block> gold_block_trapdoor = register("gold_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GOLD_BLOCK)));
	public static final RegistryObject<Block> brick_trapdoor = register("brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BRICKS)));
	public static final RegistryObject<Block> tnt_trapdoor = register("tnt_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.TNT)));
	public static final RegistryObject<Block> bookshelf_trapdoor = register("bookshelf_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BOOKSHELF)));
	public static final RegistryObject<Block> mossy_cobblestone_trapdoor = register("mossy_cobblestone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MOSSY_COBBLESTONE)));
	public static final RegistryObject<Block> obsidian_trapdoor = register("obsidian_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.OBSIDIAN)));
	public static final RegistryObject<Block> spawner_trapdoor = register("spawner_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SPAWNER)));
	public static final RegistryObject<Block> diamond_ore_trapdoor = register("diamond_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.copy(Blocks.DIAMOND_ORE)));
	public static final RegistryObject<Block> diamond_block_trapdoor = register("diamond_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DIAMOND_BLOCK)));
	public static final RegistryObject<Block> redstone_ore_trapdoor = register("redstone_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.of(Material.STONE).lightLevel((state) -> 4).strength(3.0F, 3.0F)));
	public static final RegistryObject<Block> ice_trapdoor = register("ice_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.ICE).friction(0.98F).strength(0.5F).sound(SoundType.GLASS).noOcclusion()));
	public static final RegistryObject<Block> snow_block_trapdoor = register("snow_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SNOW_BLOCK)));
	public static final RegistryObject<Block> clay_trapdoor = register("clay_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CLAY)));
	public static final RegistryObject<Block> pumpkin_trapdoor = register("pumpkin_trapdoor", new PumpkinTrapdoor(AbstractBlock.Properties.copy(Blocks.PUMPKIN)));
	public static final RegistryObject<Block> netherrack_trapdoor = register("netherrack_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.NETHERRACK)));
	public static final RegistryObject<Block> soul_sand_trapdoor = register("soul_sand_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.SAND, MaterialColor.COLOR_BROWN).strength(0.5F).speedFactor(0.4F).sound(SoundType.SAND)));
	public static final RegistryObject<Block> soul_soil_trapdoor = register("soul_soil_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SOUL_SOIL)));
	public static final RegistryObject<Block> basalt_trapdoor = register("basalt_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BASALT)));
	public static final RegistryObject<Block> polished_basalt_trapdoor = register("polished_basalt_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_BASALT)));
	public static final RegistryObject<Block> glowstone_trapdoor = register("glowstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GLOWSTONE)));
	public static final RegistryObject<Block> carved_pumpkin_trapdoor = register("carved_pumpkin_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CARVED_PUMPKIN)));
	public static final RegistryObject<Block> jack_o_lantern_trapdoor = register("jack_o_lantern_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.JACK_O_LANTERN)));
	public static final RegistryObject<Block> white_stained_glass_trapdoor = register("white_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.WHITE_STAINED_GLASS)));
	public static final RegistryObject<Block> orange_stained_glass_trapdoor = register("orange_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_STAINED_GLASS)));
	public static final RegistryObject<Block> magenta_stained_glass_trapdoor = register("magenta_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_STAINED_GLASS)));
	public static final RegistryObject<Block> light_blue_stained_glass_trapdoor = register("light_blue_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_STAINED_GLASS)));
	public static final RegistryObject<Block> yellow_stained_glass_trapdoor = register("yellow_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_STAINED_GLASS)));
	public static final RegistryObject<Block> lime_stained_glass_trapdoor = register("lime_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIME_STAINED_GLASS)));
	public static final RegistryObject<Block> pink_stained_glass_trapdoor = register("pink_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PINK_STAINED_GLASS)));
	public static final RegistryObject<Block> gray_stained_glass_trapdoor = register("gray_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GRAY_STAINED_GLASS)));
	public static final RegistryObject<Block> light_gray_stained_glass_trapdoor = register("light_gray_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_STAINED_GLASS)));
	public static final RegistryObject<Block> cyan_stained_glass_trapdoor = register("cyan_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CYAN_STAINED_GLASS)));
	public static final RegistryObject<Block> purple_stained_glass_trapdoor = register("purple_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_STAINED_GLASS)));
	public static final RegistryObject<Block> blue_stained_glass_trapdoor = register("blue_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLUE_STAINED_GLASS)));
	public static final RegistryObject<Block> brown_stained_glass_trapdoor = register("brown_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BROWN_STAINED_GLASS)));
	public static final RegistryObject<Block> green_stained_glass_trapdoor = register("green_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GREEN_STAINED_GLASS)));
	public static final RegistryObject<Block> red_stained_glass_trapdoor = register("red_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.RED_STAINED_GLASS)));
	public static final RegistryObject<Block> black_stained_glass_trapdoor = register("black_stained_glass_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLACK_STAINED_GLASS)));
	public static final RegistryObject<Block> stone_brick_trapdoor = register("stone_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.STONE_BRICKS)));
	public static final RegistryObject<Block> mossy_stone_brick_trapdoor = register("mossy_stone_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MOSSY_STONE_BRICKS)));
	public static final RegistryObject<Block> cracked_stone_brick_trapdoor = register("cracked_stone_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CRACKED_STONE_BRICKS)));
	public static final RegistryObject<Block> chiseled_stone_brick_trapdoor = register("chiseled_stone_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_STONE_BRICKS)));
	public static final RegistryObject<Block> brown_mushroom_block_trapdoor = register("brown_mushroom_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BROWN_MUSHROOM_BLOCK)));
	public static final RegistryObject<Block> red_mushroom_block_trapdoor = register("red_mushroom_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.RED_MUSHROOM_BLOCK)));
	public static final RegistryObject<Block> mushroom_stem_trapdoor = register("mushroom_stem_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MUSHROOM_STEM)));
	public static final RegistryObject<Block> iron_bars_trapdoor = register("iron_bars_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.IRON_BARS)));
	public static final RegistryObject<Block> melon_trapdoor = register("melon_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MELON)));
	public static final RegistryObject<Block> vine_trapdoor = register("vine_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.REPLACEABLE_PLANT).noCollission().strength(0.2F).sound(SoundType.GRASS)));
	public static final RegistryObject<Block> mycelium_trapdoor = register("mycelium_trapdoor", new MyceliumTrapdoor(AbstractBlock.Properties.copy(Blocks.MYCELIUM)));
	public static final RegistryObject<Block> nether_brick_trapdoor = register("nether_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.NETHER_BRICKS)));
	public static final RegistryObject<Block> end_stone_trapdoor = register("end_stone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.END_STONE)));
	public static final RegistryObject<Block> dragon_egg_trapdoor = register("dragon_egg_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DRAGON_EGG)));
	public static final RegistryObject<Block> redstone_lamp_trapdoor = register("redstone_lamp_trapdoor", new RedstoneLampTrapdoor(AbstractBlock.Properties.copy(Blocks.REDSTONE_LAMP)));
	public static final RegistryObject<Block> emerald_ore_trapdoor = register("emerald_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.copy(Blocks.EMERALD_ORE)));
	public static final RegistryObject<Block> emerald_block_trapdoor = register("emerald_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.EMERALD_BLOCK)));
	public static final RegistryObject<Block> redstone_block_trapdoor = register("redstone_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.REDSTONE_BLOCK)));
	public static final RegistryObject<Block> nether_quartz_ore_trapdoor = register("nether_quartz_ore_trapdoor", new OreTrapdoor(AbstractBlock.Properties.copy(Blocks.NETHER_QUARTZ_ORE)));
	public static final RegistryObject<Block> hopper_trapdoor = register("hopper_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.HOPPER)));
	public static final RegistryObject<Block> quartz_block_trapdoor = register("quartz_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.QUARTZ_BLOCK)));
	public static final RegistryObject<Block> chiseled_quartz_block_trapdoor = register("chiseled_quartz_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_QUARTZ_BLOCK)));
	public static final RegistryObject<Block> quartz_pillar_trapdoor = register("quartz_pillar_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.QUARTZ_PILLAR)));
	public static final RegistryObject<Block> white_terracotta_trapdoor = register("white_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.WHITE_TERRACOTTA)));
	public static final RegistryObject<Block> orange_terracotta_trapdoor = register("orange_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_TERRACOTTA)));
	public static final RegistryObject<Block> magenta_terracotta_trapdoor = register("magenta_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_TERRACOTTA)));
	public static final RegistryObject<Block> light_blue_terracotta_trapdoor = register("light_blue_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_TERRACOTTA)));
	public static final RegistryObject<Block> yellow_terracotta_trapdoor = register("yellow_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_TERRACOTTA)));
	public static final RegistryObject<Block> lime_terracotta_trapdoor = register("lime_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIME_TERRACOTTA)));
	public static final RegistryObject<Block> pink_terracotta_trapdoor = register("pink_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PINK_TERRACOTTA)));
	public static final RegistryObject<Block> gray_terracotta_trapdoor = register("gray_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GRAY_TERRACOTTA)));
	public static final RegistryObject<Block> light_gray_terracotta_trapdoor = register("light_gray_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_TERRACOTTA)));
	public static final RegistryObject<Block> cyan_terracotta_trapdoor = register("cyan_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CYAN_TERRACOTTA)));
	public static final RegistryObject<Block> purple_terracotta_trapdoor = register("purple_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_TERRACOTTA)));
	public static final RegistryObject<Block> blue_terracotta_trapdoor = register("blue_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLUE_TERRACOTTA)));
	public static final RegistryObject<Block> brown_terracotta_trapdoor = register("brown_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BROWN_TERRACOTTA)));
	public static final RegistryObject<Block> green_terracotta_trapdoor = register("green_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GREEN_TERRACOTTA)));
	public static final RegistryObject<Block> red_terracotta_trapdoor = register("red_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.RED_TERRACOTTA)));
	public static final RegistryObject<Block> black_terracotta_trapdoor = register("black_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLACK_TERRACOTTA)));
	public static final RegistryObject<Block> slime_block_trapdoor = register("slime_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SLIME_BLOCK)));
	public static final RegistryObject<Block> prismarine_trapdoor = register("prismarine_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PRISMARINE)));
	public static final RegistryObject<Block> prismarine_brick_trapdoor = register("prismarine_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PRISMARINE_BRICKS)));
	public static final RegistryObject<Block> dark_prismarine_trapdoor = register("dark_prismarine_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DARK_PRISMARINE)));
	public static final RegistryObject<Block> sea_lantern_trapdoor = register("sea_lantern_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SEA_LANTERN)));
	public static final RegistryObject<Block> hay_block_trapdoor = register("hay_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.HAY_BLOCK)));
	public static final RegistryObject<Block> terracotta_trapdoor = register("terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.TERRACOTTA)));
	public static final RegistryObject<Block> coal_block_trapdoor = register("coal_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.COAL_BLOCK)));
	public static final RegistryObject<Block> packed_ice_trapdoor = register("packed_ice_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PACKED_ICE)));
	public static final RegistryObject<Block> red_sandstone_trapdoor = register("red_sandstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.RED_SANDSTONE)));
	public static final RegistryObject<Block> chiseled_red_sandstone_trapdoor = register("chiseled_red_sandstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_RED_SANDSTONE)));
	public static final RegistryObject<Block> cut_red_sandstone_trapdoor = register("cut_red_sandstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CUT_RED_SANDSTONE)));
	public static final RegistryObject<Block> smooth_stone_trapdoor = register("smooth_stone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SMOOTH_STONE)));
	public static final RegistryObject<Block> smooth_sandstone_trapdoor = register("smooth_sandstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SMOOTH_SANDSTONE)));
	public static final RegistryObject<Block> smooth_quartz_trapdoor = register("smooth_quartz_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SMOOTH_QUARTZ)));
	public static final RegistryObject<Block> smooth_red_sandstone_trapdoor = register("smooth_red_sandstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SMOOTH_RED_SANDSTONE)));
	public static final RegistryObject<Block> purpur_block_trapdoor = register("purpur_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PURPUR_BLOCK)));
	public static final RegistryObject<Block> purpur_pillar_trapdoor = register("purpur_pillar_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PURPUR_PILLAR)));
	public static final RegistryObject<Block> end_stone_brick_trapdoor = register("end_stone_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.END_STONE_BRICKS)));
	public static final RegistryObject<Block> grass_path_trapdoor = register("grass_path_trapdoor", new GrassPathTrapdoor(AbstractBlock.Properties.copy(Blocks.GRASS_PATH)));
	public static final RegistryObject<Block> magma_block_trapdoor = register("magma_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.of(Material.STONE, MaterialColor.NETHER).lightLevel((state) -> 3).strength(0.5F)));
	public static final RegistryObject<Block> nether_wart_block_trapdoor = register("nether_wart_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.NETHER_WART_BLOCK)));
	public static final RegistryObject<Block> red_nether_brick_trapdoor = register("red_nether_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.RED_NETHER_BRICKS)));
	public static final RegistryObject<Block> bone_block_trapdoor = register("bone_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BONE_BLOCK)));
	public static final RegistryObject<Block> white_glazed_terracotta_trapdoor = register("white_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.WHITE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> orange_glazed_terracotta_trapdoor = register("orange_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> magenta_glazed_terracotta_trapdoor = register("magenta_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> light_blue_glazed_terracotta_trapdoor = register("light_blue_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> yellow_glazed_terracotta_trapdoor = register("yellow_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> lime_glazed_terracotta_trapdoor = register("lime_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIME_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> pink_glazed_terracotta_trapdoor = register("pink_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PINK_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> gray_glazed_terracotta_trapdoor = register("gray_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GRAY_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> light_gray_glazed_terracotta_trapdoor = register("light_gray_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> cyan_glazed_terracotta_trapdoor = register("cyan_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CYAN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> purple_glazed_terracotta_trapdoor = register("purple_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> blue_glazed_terracotta_trapdoor = register("blue_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLUE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> brown_glazed_terracotta_trapdoor = register("brown_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BROWN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> green_glazed_terracotta_trapdoor = register("green_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GREEN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> red_glazed_terracotta_trapdoor = register("red_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.RED_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> black_glazed_terracotta_trapdoor = register("black_glazed_terracotta_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLACK_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> white_concrete_trapdoor = register("white_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.WHITE_CONCRETE)));
	public static final RegistryObject<Block> orange_concrete_trapdoor = register("orange_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_CONCRETE)));
	public static final RegistryObject<Block> magenta_concrete_trapdoor = register("magenta_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_CONCRETE)));
	public static final RegistryObject<Block> light_blue_concrete_trapdoor = register("light_blue_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_CONCRETE)));
	public static final RegistryObject<Block> yellow_concrete_trapdoor = register("yellow_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_CONCRETE)));
	public static final RegistryObject<Block> lime_concrete_trapdoor = register("lime_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIME_CONCRETE)));
	public static final RegistryObject<Block> pink_concrete_trapdoor = register("pink_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PINK_CONCRETE)));
	public static final RegistryObject<Block> gray_concrete_trapdoor = register("gray_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GRAY_CONCRETE)));
	public static final RegistryObject<Block> light_gray_concrete_trapdoor = register("light_gray_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_CONCRETE)));
	public static final RegistryObject<Block> cyan_concrete_trapdoor = register("cyan_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CYAN_CONCRETE)));
	public static final RegistryObject<Block> purple_concrete_trapdoor = register("purple_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_CONCRETE)));
	public static final RegistryObject<Block> blue_concrete_trapdoor = register("blue_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLUE_CONCRETE)));
	public static final RegistryObject<Block> brown_concrete_trapdoor = register("brown_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BROWN_CONCRETE)));
	public static final RegistryObject<Block> green_concrete_trapdoor = register("green_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GREEN_CONCRETE)));
	public static final RegistryObject<Block> red_concrete_trapdoor = register("red_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.RED_CONCRETE)));
	public static final RegistryObject<Block> black_concrete_trapdoor = register("black_concrete_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLACK_CONCRETE)));
	public static final RegistryObject<Block> white_concrete_powder_trapdoor = register("white_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.WHITE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> orange_concrete_powder_trapdoor = register("orange_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.ORANGE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> magenta_concrete_powder_trapdoor = register("magenta_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.MAGENTA_CONCRETE_POWDER)));
	public static final RegistryObject<Block> light_blue_concrete_powder_trapdoor = register("light_blue_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> yellow_concrete_powder_trapdoor = register("yellow_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.YELLOW_CONCRETE_POWDER)));
	public static final RegistryObject<Block> lime_concrete_powder_trapdoor = register("lime_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.LIME_CONCRETE_POWDER)));
	public static final RegistryObject<Block> pink_concrete_powder_trapdoor = register("pink_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.PINK_CONCRETE_POWDER)));
	public static final RegistryObject<Block> gray_concrete_powder_trapdoor = register("gray_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.GRAY_CONCRETE_POWDER)));
	public static final RegistryObject<Block> light_gray_concrete_powder_trapdoor = register("light_gray_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_CONCRETE_POWDER)));
	public static final RegistryObject<Block> cyan_concrete_powder_trapdoor = register("cyan_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.CYAN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> purple_concrete_powder_trapdoor = register("purple_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.PURPLE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> blue_concrete_powder_trapdoor = register("blue_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.BLUE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> brown_concrete_powder_trapdoor = register("brown_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.BROWN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> green_concrete_powder_trapdoor = register("green_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.GREEN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> red_concrete_powder_trapdoor = register("red_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.RED_CONCRETE_POWDER)));
	public static final RegistryObject<Block> black_concrete_powder_trapdoor = register("black_concrete_powder_trapdoor", new ConcretePowderTrapdoor(AbstractBlock.Properties.copy(Blocks.BLACK_CONCRETE_POWDER)));
	public static final RegistryObject<Block> dried_kelp_block_trapdoor = register("dried_kelp_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DRIED_KELP_BLOCK)));
	public static final RegistryObject<Block> dead_tube_coral_block_trapdoor = register("dead_tube_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DEAD_TUBE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_brain_coral_block_trapdoor = register("dead_brain_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DEAD_BRAIN_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_bubble_coral_block_trapdoor = register("dead_bubble_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DEAD_BUBBLE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_fire_coral_block_trapdoor = register("dead_fire_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DEAD_FIRE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_horn_coral_block_trapdoor = register("dead_horn_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.DEAD_HORN_CORAL_BLOCK)));
	public static final RegistryObject<Block> tube_coral_block_trapdoor = register("tube_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.TUBE_CORAL_BLOCK)));
	public static final RegistryObject<Block> brain_coral_block_trapdoor = register("brain_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BRAIN_CORAL_BLOCK)));
	public static final RegistryObject<Block> bubble_coral_block_trapdoor = register("bubble_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BUBBLE_CORAL_BLOCK)));
	public static final RegistryObject<Block> fire_coral_block_trapdoor = register("fire_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.FIRE_CORAL_BLOCK)));
	public static final RegistryObject<Block> horn_coral_block_trapdoor = register("horn_coral_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.HORN_CORAL_BLOCK)));
	public static final RegistryObject<Block> blue_ice_trapdoor = register("blue_ice_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLUE_ICE)));
	public static final RegistryObject<Block> warped_stem_trapdoor = register("warped_stem_trapdoor", new LogTrapdoor(AbstractBlock.Properties.copy(Blocks.WARPED_STEM)));
	public static final RegistryObject<Block> stripped_warped_stem_trapdoor = register("stripped_warped_stem_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.STRIPPED_WARPED_STEM)));
	public static final RegistryObject<Block> warped_hyphae_trapdoor = register("warped_hyphae_trapdoor", new LogTrapdoor(AbstractBlock.Properties.copy(Blocks.WARPED_HYPHAE)));
	public static final RegistryObject<Block> stripped_warped_hyphae_trapdoor = register("stripped_warped_hyphae_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.STRIPPED_WARPED_HYPHAE)));
	public static final RegistryObject<Block> warped_nylium_trapdoor = register("warped_nylium_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.WARPED_NYLIUM)));
	public static final RegistryObject<Block> warped_wart_block_trapdoor = register("warped_wart_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.WARPED_WART_BLOCK)));
	public static final RegistryObject<Block> crimson_stem_trapdoor = register("crimson_stem_trapdoor", new LogTrapdoor(AbstractBlock.Properties.copy(Blocks.CRIMSON_STEM)));
	public static final RegistryObject<Block> stripped_crimson_stem_trapdoor = register("stripped_crimson_stem_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.STRIPPED_CRIMSON_STEM)));
	public static final RegistryObject<Block> crimson_hyphae_trapdoor = register("crimson_hyphae_trapdoor", new LogTrapdoor(AbstractBlock.Properties.copy(Blocks.CRIMSON_HYPHAE)));
	public static final RegistryObject<Block> stripped_crimson_hyphae_trapdoor = register("stripped_crimson_hyphae_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.STRIPPED_CRIMSON_HYPHAE)));
	public static final RegistryObject<Block> crimson_nylium_trapdoor = register("crimson_nylium_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CRIMSON_NYLIUM)));
	public static final RegistryObject<Block> shroomlight_trapdoor = register("shroomlight_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.SHROOMLIGHT)));
	public static final RegistryObject<Block> honey_block_trapdoor = register("honey_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.HONEY_BLOCK)));
	public static final RegistryObject<Block> honeycomb_block_trapdoor = register("honeycomb_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.HONEYCOMB_BLOCK)));
	public static final RegistryObject<Block> netherite_block_trapdoor = register("netherite_block_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.NETHERITE_BLOCK)));
	public static final RegistryObject<Block> ancient_debris_trapdoor = register("ancient_debris_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.ANCIENT_DEBRIS)));
	public static final RegistryObject<Block> crying_obsidian_trapdoor = register("crying_obsidian_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CRYING_OBSIDIAN)));
	public static final RegistryObject<Block> blackstone_trapdoor = register("blackstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.BLACKSTONE)));
	public static final RegistryObject<Block> polished_blackstone_trapdoor = register("polished_blackstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_BLACKSTONE)));
	public static final RegistryObject<Block> polished_blackstone_brick_trapdoor = register("polished_blackstone_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_BLACKSTONE_BRICKS)));
	public static final RegistryObject<Block> cracked_polished_blackstone_brick_trapdoor = register("cracked_polished_blackstone_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS)));
	public static final RegistryObject<Block> chiseled_polished_blackstone_trapdoor = register("chiseled_polished_blackstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_POLISHED_BLACKSTONE)));
	public static final RegistryObject<Block> gilded_blackstone_trapdoor = register("gilded_blackstone_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.GILDED_BLACKSTONE)));
	public static final RegistryObject<Block> chiseled_nether_brick_trapdoor = register("chiseled_nether_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_NETHER_BRICKS)));
	public static final RegistryObject<Block> cracked_nether_brick_trapdoor = register("cracked_nether_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.CRACKED_NETHER_BRICKS)));
	public static final RegistryObject<Block> quartz_brick_trapdoor = register("quartz_brick_trapdoor", new TrapDoorBlock(AbstractBlock.Properties.copy(Blocks.QUARTZ_BRICKS)));

	private static RegistryObject<Block> register(String name, Block block) {
		ITEMS.register(name, () -> new BlockItem(block, new Item.Properties().tab(VanillaExtension.VanillaExtensionItemGroup.instance)));
		return BLOCKS.register(name, () -> block);
	}
}
