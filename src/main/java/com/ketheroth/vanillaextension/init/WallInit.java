package com.ketheroth.vanillaextension.init;

import com.ketheroth.vanillaextension.VanillaExtension;
import com.ketheroth.vanillaextension.walls.*;
import net.minecraft.block.*;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraftforge.fml.RegistryObject;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.common.Mod.EventBusSubscriber.Bus;

import static com.ketheroth.vanillaextension.VanillaExtension.BLOCKS;
import static com.ketheroth.vanillaextension.VanillaExtension.ITEMS;

@Mod.EventBusSubscriber(modid = VanillaExtension.MODID, bus = Bus.MOD)
public class WallInit {

	public static final RegistryObject<Block> stone_wall = register("stone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.STONE)));
	public static final RegistryObject<Block> polished_granite_wall = register("polished_granite_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_GRANITE)));
	public static final RegistryObject<Block> polished_diorite_wall = register("polished_diorite_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_DIORITE)));
	public static final RegistryObject<Block> polished_andesite_wall = register("polished_andesite_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_ANDESITE)));
	public static final RegistryObject<Block> grass_block_wall = register("grass_block_wall", new GrassBlockWall(AbstractBlock.Properties.copy(Blocks.GRASS_BLOCK)));
	public static final RegistryObject<Block> dirt_wall = register("dirt_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DIRT)));
	public static final RegistryObject<Block> coarse_dirt_wall = register("coarse_dirt_wall", new CoarseDirtWall(AbstractBlock.Properties.copy(Blocks.COARSE_DIRT)));
	public static final RegistryObject<Block> podzol_wall = register("podzol_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PODZOL)));
	public static final RegistryObject<Block> oak_plank_wall = register("oak_plank_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.OAK_PLANKS)));
	public static final RegistryObject<Block> spruce_plank_wall = register("spruce_plank_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SPRUCE_PLANKS)));
	public static final RegistryObject<Block> birch_plank_wall = register("birch_plank_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BIRCH_PLANKS)));
	public static final RegistryObject<Block> jungle_plank_wall = register("jungle_plank_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.JUNGLE_PLANKS)));
	public static final RegistryObject<Block> acacia_plank_wall = register("acacia_plank_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ACACIA_PLANKS)));
	public static final RegistryObject<Block> dark_oak_plank_wall = register("dark_oak_plank_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DARK_OAK_PLANKS)));
	public static final RegistryObject<Block> bedrock_wall = register("bedrock_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BEDROCK)));
	public static final RegistryObject<Block> sand_wall = register("sand_wall", new FallingWall(AbstractBlock.Properties.copy(Blocks.SAND)));
	public static final RegistryObject<Block> red_sand_wall = register("red_sand_wall", new FallingWall(AbstractBlock.Properties.copy(Blocks.RED_SAND)));
	public static final RegistryObject<Block> gravel_wall = register("gravel_wall", new FallingWall(AbstractBlock.Properties.copy(Blocks.GRAVEL)));
	public static final RegistryObject<Block> gold_ore_wall = register("gold_ore_wall", new OreWall(AbstractBlock.Properties.copy(Blocks.GOLD_ORE)));
	public static final RegistryObject<Block> iron_ore_wall = register("iron_ore_wall", new OreWall(AbstractBlock.Properties.copy(Blocks.IRON_ORE)));
	public static final RegistryObject<Block> coal_ore_wall = register("coal_ore_wall", new OreWall(AbstractBlock.Properties.copy(Blocks.COAL_ORE)));
	public static final RegistryObject<Block> nether_gold_ore_wall = register("nether_gold_ore_wall", new OreWall(AbstractBlock.Properties.copy(Blocks.NETHER_GOLD_ORE)));
	public static final RegistryObject<Block> oak_log_wall = register("oak_log_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> spruce_log_wall = register("spruce_log_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> birch_log_wall = register("birch_log_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> jungle_log_wall = register("jungle_log_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> acacia_log_wall = register("acacia_log_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> dark_oak_log_wall = register("dark_oak_log_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_oak_log_wall = register("stripped_oak_log_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_spruce_log_wall = register("stripped_spruce_log_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_birch_log_wall = register("stripped_birch_log_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_jungle_log_wall = register("stripped_jungle_log_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_acacia_log_wall = register("stripped_acacia_log_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_dark_oak_log_wall = register("stripped_dark_oak_log_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> oak_wood_wall = register("oak_wood_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> spruce_wood_wall = register("spruce_wood_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> birch_wood_wall = register("birch_wood_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> jungle_wood_wall = register("jungle_wood_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> acacia_wood_wall = register("acacia_wood_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_GRAY).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> dark_oak_wood_wall = register("dark_oak_wood_wall", new LogWall(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_oak_wood_wall = register("stripped_oak_wood_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.WOOD).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_spruce_wood_wall = register("stripped_spruce_wood_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.PODZOL).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_birch_wood_wall = register("stripped_birch_wood_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.SAND).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_jungle_wood_wall = register("stripped_jungle_wood_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.DIRT).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_acacia_wood_wall = register("stripped_acacia_wood_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_ORANGE).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> stripped_dark_oak_wood_wall = register("stripped_dark_oak_wood_wall", new WallBlock(AbstractBlock.Properties.of(Material.WOOD, MaterialColor.COLOR_BROWN).strength(2.0F).sound(SoundType.WOOD)));
	public static final RegistryObject<Block> oak_leaves_wall = register("oak_leaves_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.OAK_LEAVES)));
	public static final RegistryObject<Block> spruce_leaves_wall = register("spruce_leaves_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SPRUCE_LEAVES)));
	public static final RegistryObject<Block> birch_leaves_wall = register("birch_leaves_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BIRCH_LEAVES)));
	public static final RegistryObject<Block> jungle_leaves_wall = register("jungle_leaves_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.JUNGLE_LEAVES)));
	public static final RegistryObject<Block> acacia_leaves_wall = register("acacia_leaves_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ACACIA_LEAVES)));
	public static final RegistryObject<Block> dark_oak_leaves_wall = register("dark_oak_leaves_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DARK_OAK_LEAVES)));
	public static final RegistryObject<Block> sponge_wall = register("sponge_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SPONGE)));
	public static final RegistryObject<Block> wet_sponge_wall = register("wet_sponge_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WET_SPONGE)));
	public static final RegistryObject<Block> glass_wall = register("glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GLASS)));
	public static final RegistryObject<Block> lapis_ore_wall = register("lapis_ore_wall", new OreWall(AbstractBlock.Properties.copy(Blocks.LAPIS_ORE)));
	public static final RegistryObject<Block> lapis_block_wall = register("lapis_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LAPIS_BLOCK)));
	public static final RegistryObject<Block> chiseled_sandstone_wall = register("chiseled_sandstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_SANDSTONE)));
	public static final RegistryObject<Block> cut_sandstone_wall = register("cut_sandstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CUT_SANDSTONE)));
	public static final RegistryObject<Block> white_wool_wall = register("white_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WHITE_WOOL)));
	public static final RegistryObject<Block> orange_wool_wall = register("orange_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_WOOL)));
	public static final RegistryObject<Block> magenta_wool_wall = register("magenta_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_WOOL)));
	public static final RegistryObject<Block> light_blue_wool_wall = register("light_blue_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_WOOL)));
	public static final RegistryObject<Block> yellow_wool_wall = register("yellow_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_WOOL)));
	public static final RegistryObject<Block> lime_wool_wall = register("lime_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIME_WOOL)));
	public static final RegistryObject<Block> pink_wool_wall = register("pink_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PINK_WOOL)));
	public static final RegistryObject<Block> gray_wool_wall = register("gray_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GRAY_WOOL)));
	public static final RegistryObject<Block> light_gray_wool_wall = register("light_gray_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_WOOL)));
	public static final RegistryObject<Block> cyan_wool_wall = register("cyan_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CYAN_WOOL)));
	public static final RegistryObject<Block> purple_wool_wall = register("purple_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_WOOL)));
	public static final RegistryObject<Block> blue_wool_wall = register("blue_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLUE_WOOL)));
	public static final RegistryObject<Block> brown_wool_wall = register("brown_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BROWN_WOOL)));
	public static final RegistryObject<Block> green_wool_wall = register("green_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GREEN_WOOL)));
	public static final RegistryObject<Block> red_wool_wall = register("red_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.RED_WOOL)));
	public static final RegistryObject<Block> black_wool_wall = register("black_wool_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLACK_WOOL)));
	public static final RegistryObject<Block> gold_block_wall = register("gold_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GOLD_BLOCK)));
	public static final RegistryObject<Block> iron_block_wall = register("iron_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.IRON_BLOCK)));
	public static final RegistryObject<Block> tnt_wall = register("tnt_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.TNT)));
	public static final RegistryObject<Block> bookshelf_wall = register("bookshelf_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BOOKSHELF)));
	public static final RegistryObject<Block> obsidian_wall = register("obsidian_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.OBSIDIAN)));
	public static final RegistryObject<Block> spawner_wall = register("spawner_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SPAWNER)));
	public static final RegistryObject<Block> diamond_ore_wall = register("diamond_ore_wall", new OreWall(AbstractBlock.Properties.copy(Blocks.DIAMOND_ORE)));
	public static final RegistryObject<Block> diamond_block_wall = register("diamond_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DIAMOND_BLOCK)));
	public static final RegistryObject<Block> redstone_ore_wall = register("redstone_ore_wall", new OreWall(AbstractBlock.Properties.of(Material.STONE).lightLevel((state) -> {
		return 4;
	}).strength(3.0F, 3.0F)));
	public static final RegistryObject<Block> ice_wall = register("ice_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ICE)));
	public static final RegistryObject<Block> snow_block_wall = register("snow_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SNOW_BLOCK)));
	public static final RegistryObject<Block> clay_wall = register("clay_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CLAY)));
	public static final RegistryObject<Block> pumpkin_wall = register("pumpkin_wall", new PumpkinWall(AbstractBlock.Properties.copy(Blocks.PUMPKIN)));
	public static final RegistryObject<Block> netherrack_wall = register("netherrack_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.NETHERRACK)));
	public static final RegistryObject<Block> soul_sand_wall = register("soul_sand_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SOUL_SAND)));
	public static final RegistryObject<Block> soul_soil_wall = register("soul_soil_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SOUL_SOIL)));
	public static final RegistryObject<Block> glowstone_wall = register("glowstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GLOWSTONE)));
	public static final RegistryObject<Block> carved_pumpkin_wall = register("carved_pumpkin_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CARVED_PUMPKIN)));
	public static final RegistryObject<Block> jack_o_lantern_wall = register("jack_o_lantern_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.JACK_O_LANTERN)));
	public static final RegistryObject<Block> white_stained_glass_wall = register("white_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WHITE_STAINED_GLASS)));
	public static final RegistryObject<Block> orange_stained_glass_wall = register("orange_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_STAINED_GLASS)));
	public static final RegistryObject<Block> magenta_stained_glass_wall = register("magenta_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_STAINED_GLASS)));
	public static final RegistryObject<Block> light_blue_stained_glass_wall = register("light_blue_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_STAINED_GLASS)));
	public static final RegistryObject<Block> yellow_stained_glass_wall = register("yellow_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_STAINED_GLASS)));
	public static final RegistryObject<Block> lime_stained_glass_wall = register("lime_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIME_STAINED_GLASS)));
	public static final RegistryObject<Block> pink_stained_glass_wall = register("pink_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PINK_STAINED_GLASS)));
	public static final RegistryObject<Block> gray_stained_glass_wall = register("gray_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GRAY_STAINED_GLASS)));
	public static final RegistryObject<Block> light_gray_stained_glass_wall = register("light_gray_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_STAINED_GLASS)));
	public static final RegistryObject<Block> cyan_stained_glass_wall = register("cyan_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CYAN_STAINED_GLASS)));
	public static final RegistryObject<Block> purple_stained_glass_wall = register("purple_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_STAINED_GLASS)));
	public static final RegistryObject<Block> blue_stained_glass_wall = register("blue_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLUE_STAINED_GLASS)));
	public static final RegistryObject<Block> brown_stained_glass_wall = register("brown_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BROWN_STAINED_GLASS)));
	public static final RegistryObject<Block> green_stained_glass_wall = register("green_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GREEN_STAINED_GLASS)));
	public static final RegistryObject<Block> red_stained_glass_wall = register("red_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.RED_STAINED_GLASS)));
	public static final RegistryObject<Block> black_stained_glass_wall = register("black_stained_glass_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLACK_STAINED_GLASS)));
	public static final RegistryObject<Block> oak_trapdoor_wall = register("oak_trapdoor_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.OAK_TRAPDOOR)));
	public static final RegistryObject<Block> spruce_trapdoor_wall = register("spruce_trapdoor_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SPRUCE_TRAPDOOR)));
	public static final RegistryObject<Block> birch_trapdoor_wall = register("birch_trapdoor_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BIRCH_TRAPDOOR)));
	public static final RegistryObject<Block> jungle_trapdoor_wall = register("jungle_trapdoor_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.JUNGLE_TRAPDOOR)));
	public static final RegistryObject<Block> acacia_trapdoor_wall = register("acacia_trapdoor_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ACACIA_TRAPDOOR)));
	public static final RegistryObject<Block> dark_oak_trapdoor_wall = register("dark_oak_trapdoor_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DARK_OAK_TRAPDOOR)));
	public static final RegistryObject<Block> cracked_stone_brick_wall = register("cracked_stone_brick_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CRACKED_STONE_BRICKS)));
	public static final RegistryObject<Block> chiseled_stone_brick_wall = register("chiseled_stone_brick_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_STONE_BRICKS)));
	public static final RegistryObject<Block> brown_mushroom_block_wall = register("brown_mushroom_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BROWN_MUSHROOM_BLOCK)));
	public static final RegistryObject<Block> red_mushroom_block_wall = register("red_mushroom_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.RED_MUSHROOM_BLOCK)));
	public static final RegistryObject<Block> mushroom_stem_wall = register("mushroom_stem_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.MUSHROOM_STEM)));
	public static final RegistryObject<Block> iron_bars_wall = register("iron_bars_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.IRON_BARS)));
	public static final RegistryObject<Block> melon_wall = register("melon_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.MELON)));
	public static final RegistryObject<Block> vine_wall = register("vine_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.VINE)));
	public static final RegistryObject<Block> mycelium_wall = register("mycelium_wall", new MyceliumWall(AbstractBlock.Properties.copy(Blocks.MYCELIUM)));
	public static final RegistryObject<Block> end_stone_wall = register("end_stone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.END_STONE)));
	public static final RegistryObject<Block> dragon_egg_wall = register("dragon_egg_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DRAGON_EGG)));
	public static final RegistryObject<Block> redstone_lamp_wall = register("redstone_lamp_wall", new RedstoneLampWall(AbstractBlock.Properties.copy(Blocks.REDSTONE_LAMP)));
	public static final RegistryObject<Block> emerald_ore_wall = register("emerald_ore_wall", new OreWall(AbstractBlock.Properties.copy(Blocks.EMERALD_ORE)));
	public static final RegistryObject<Block> emerald_block_wall = register("emerald_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.EMERALD_BLOCK)));
	public static final RegistryObject<Block> redstone_block_wall = register("redstone_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.REDSTONE_BLOCK)));
	public static final RegistryObject<Block> nether_quartz_ore_wall = register("nether_quartz_ore_wall", new OreWall(AbstractBlock.Properties.copy(Blocks.NETHER_QUARTZ_ORE)));
	public static final RegistryObject<Block> hopper_wall = register("hopper_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.HOPPER)));
	public static final RegistryObject<Block> quartz_block_wall = register("quartz_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.QUARTZ_BLOCK)));
	public static final RegistryObject<Block> chiseled_quartz_block_wall = register("chiseled_quartz_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_QUARTZ_BLOCK)));
	public static final RegistryObject<Block> quartz_pillar_wall = register("quartz_pillar_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.QUARTZ_PILLAR)));
	public static final RegistryObject<Block> white_terracotta_wall = register("white_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WHITE_TERRACOTTA)));
	public static final RegistryObject<Block> orange_terracotta_wall = register("orange_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_TERRACOTTA)));
	public static final RegistryObject<Block> magenta_terracotta_wall = register("magenta_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_TERRACOTTA)));
	public static final RegistryObject<Block> light_blue_terracotta_wall = register("light_blue_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_TERRACOTTA)));
	public static final RegistryObject<Block> yellow_terracotta_wall = register("yellow_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_TERRACOTTA)));
	public static final RegistryObject<Block> lime_terracotta_wall = register("lime_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIME_TERRACOTTA)));
	public static final RegistryObject<Block> pink_terracotta_wall = register("pink_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PINK_TERRACOTTA)));
	public static final RegistryObject<Block> gray_terracotta_wall = register("gray_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GRAY_TERRACOTTA)));
	public static final RegistryObject<Block> light_gray_terracotta_wall = register("light_gray_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_TERRACOTTA)));
	public static final RegistryObject<Block> cyan_terracotta_wall = register("cyan_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CYAN_TERRACOTTA)));
	public static final RegistryObject<Block> purple_terracotta_wall = register("purple_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_TERRACOTTA)));
	public static final RegistryObject<Block> blue_terracotta_wall = register("blue_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLUE_TERRACOTTA)));
	public static final RegistryObject<Block> brown_terracotta_wall = register("brown_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BROWN_TERRACOTTA)));
	public static final RegistryObject<Block> green_terracotta_wall = register("green_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GREEN_TERRACOTTA)));
	public static final RegistryObject<Block> red_terracotta_wall = register("red_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.RED_TERRACOTTA)));
	public static final RegistryObject<Block> black_terracotta_wall = register("black_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLACK_TERRACOTTA)));
	public static final RegistryObject<Block> slime_block_wall = register("slime_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SLIME_BLOCK)));
	public static final RegistryObject<Block> iron_trapdoor_wall = register("iron_trapdoor_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.IRON_TRAPDOOR)));
	public static final RegistryObject<Block> prismarine_brick_wall = register("prismarine_brick_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PRISMARINE_BRICKS)));
	public static final RegistryObject<Block> dark_prismarine_wall = register("dark_prismarine_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DARK_PRISMARINE)));
	public static final RegistryObject<Block> sea_lantern_wall = register("sea_lantern_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SEA_LANTERN)));
	public static final RegistryObject<Block> hay_block_wall = register("hay_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.HAY_BLOCK)));
	public static final RegistryObject<Block> terracotta_wall = register("terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.TERRACOTTA)));
	public static final RegistryObject<Block> coal_block_wall = register("coal_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.COAL_BLOCK)));
	public static final RegistryObject<Block> packed_ice_wall = register("packed_ice_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PACKED_ICE)));
	public static final RegistryObject<Block> chiseled_red_sandstone_wall = register("chiseled_red_sandstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_RED_SANDSTONE)));
	public static final RegistryObject<Block> cut_red_sandstone_wall = register("cut_red_sandstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CUT_RED_SANDSTONE)));
	public static final RegistryObject<Block> smooth_stone_wall = register("smooth_stone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SMOOTH_STONE)));
	public static final RegistryObject<Block> smooth_sandstone_wall = register("smooth_sandstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SMOOTH_SANDSTONE)));
	public static final RegistryObject<Block> smooth_quartz_wall = register("smooth_quartz_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SMOOTH_QUARTZ)));
	public static final RegistryObject<Block> smooth_red_sandstone_wall = register("smooth_red_sandstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SMOOTH_RED_SANDSTONE)));
	public static final RegistryObject<Block> purpur_block_wall = register("purpur_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PURPUR_BLOCK)));
	public static final RegistryObject<Block> purpur_pillar_wall = register("purpur_pillar_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PURPUR_PILLAR)));
	public static final RegistryObject<Block> grass_path_wall = register("grass_path_wall", new GrassPathWall(AbstractBlock.Properties.copy(Blocks.GRASS_PATH)));
	public static final RegistryObject<Block> magma_block_wall = register("magma_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.MAGMA_BLOCK)));
	public static final RegistryObject<Block> nether_wart_block_wall = register("bone_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BONE_BLOCK)));
	public static final RegistryObject<Block> bone_block_wall = register("nether_wart_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.NETHER_WART_BLOCK)));
	public static final RegistryObject<Block> white_glazed_terracotta_wall = register("white_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WHITE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> orange_glazed_terracotta_wall = register("orange_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> magenta_glazed_terracotta_wall = register("magenta_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> light_blue_glazed_terracotta_wall = register("light_blue_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> yellow_glazed_terracotta_wall = register("yellow_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> lime_glazed_terracotta_wall = register("lime_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIME_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> pink_glazed_terracotta_wall = register("pink_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PINK_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> gray_glazed_terracotta_wall = register("gray_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GRAY_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> light_gray_glazed_terracotta_wall = register("light_gray_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> cyan_glazed_terracotta_wall = register("cyan_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CYAN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> purple_glazed_terracotta_wall = register("purple_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> blue_glazed_terracotta_wall = register("blue_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLUE_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> brown_glazed_terracotta_wall = register("brown_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BROWN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> green_glazed_terracotta_wall = register("green_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GREEN_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> red_glazed_terracotta_wall = register("red_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.RED_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> black_glazed_terracotta_wall = register("black_glazed_terracotta_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLACK_GLAZED_TERRACOTTA)));
	public static final RegistryObject<Block> white_concrete_wall = register("white_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WHITE_CONCRETE)));
	public static final RegistryObject<Block> orange_concrete_wall = register("orange_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ORANGE_CONCRETE)));
	public static final RegistryObject<Block> magenta_concrete_wall = register("magenta_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.MAGENTA_CONCRETE)));
	public static final RegistryObject<Block> light_blue_concrete_wall = register("light_blue_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_CONCRETE)));
	public static final RegistryObject<Block> yellow_concrete_wall = register("yellow_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.YELLOW_CONCRETE)));
	public static final RegistryObject<Block> lime_concrete_wall = register("lime_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIME_CONCRETE)));
	public static final RegistryObject<Block> pink_concrete_wall = register("pink_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PINK_CONCRETE)));
	public static final RegistryObject<Block> gray_concrete_wall = register("gray_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GRAY_CONCRETE)));
	public static final RegistryObject<Block> light_gray_concrete_wall = register("light_gray_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_CONCRETE)));
	public static final RegistryObject<Block> cyan_concrete_wall = register("cyan_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CYAN_CONCRETE)));
	public static final RegistryObject<Block> purple_concrete_wall = register("purple_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.PURPLE_CONCRETE)));
	public static final RegistryObject<Block> blue_concrete_wall = register("blue_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLUE_CONCRETE)));
	public static final RegistryObject<Block> brown_concrete_wall = register("brown_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BROWN_CONCRETE)));
	public static final RegistryObject<Block> green_concrete_wall = register("green_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GREEN_CONCRETE)));
	public static final RegistryObject<Block> red_concrete_wall = register("red_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.RED_CONCRETE)));
	public static final RegistryObject<Block> black_concrete_wall = register("black_concrete_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLACK_CONCRETE)));
	public static final RegistryObject<Block> white_concrete_powder_wall = register("white_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.WHITE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> orange_concrete_powder_wall = register("orange_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.ORANGE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> magenta_concrete_powder_wall = register("magenta_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.MAGENTA_CONCRETE_POWDER)));
	public static final RegistryObject<Block> light_blue_concrete_powder_wall = register("light_blue_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.LIGHT_BLUE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> yellow_concrete_powder_wall = register("yellow_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.YELLOW_CONCRETE_POWDER)));
	public static final RegistryObject<Block> lime_concrete_powder_wall = register("lime_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.LIME_CONCRETE_POWDER)));
	public static final RegistryObject<Block> pink_concrete_powder_wall = register("pink_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.PINK_CONCRETE_POWDER)));
	public static final RegistryObject<Block> gray_concrete_powder_wall = register("gray_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.GRAY_CONCRETE_POWDER)));
	public static final RegistryObject<Block> light_gray_concrete_powder_wall = register("light_gray_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.LIGHT_GRAY_CONCRETE_POWDER)));
	public static final RegistryObject<Block> cyan_concrete_powder_wall = register("cyan_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.CYAN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> purple_concrete_powder_wall = register("purple_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.PURPLE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> blue_concrete_powder_wall = register("blue_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.BLUE_CONCRETE_POWDER)));
	public static final RegistryObject<Block> brown_concrete_powder_wall = register("brown_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.BROWN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> green_concrete_powder_wall = register("green_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.GREEN_CONCRETE_POWDER)));
	public static final RegistryObject<Block> red_concrete_powder_wall = register("red_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.RED_CONCRETE_POWDER)));
	public static final RegistryObject<Block> black_concrete_powder_wall = register("black_concrete_powder_wall", new ConcretePowderWall(AbstractBlock.Properties.copy(Blocks.BLACK_CONCRETE_POWDER)));
	public static final RegistryObject<Block> dried_kelp_block_wall = register("dried_kelp_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DRIED_KELP_BLOCK)));
	public static final RegistryObject<Block> dead_tube_coral_block_wall = register("dead_tube_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DEAD_TUBE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_brain_coral_block_wall = register("dead_brain_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DEAD_BRAIN_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_bubble_coral_block_wall = register("dead_bubble_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DEAD_BUBBLE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_fire_coral_block_wall = register("dead_fire_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DEAD_FIRE_CORAL_BLOCK)));
	public static final RegistryObject<Block> dead_horn_coral_block_wall = register("dead_horn_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.DEAD_HORN_CORAL_BLOCK)));
	public static final RegistryObject<Block> tube_coral_block_wall = register("tube_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.TUBE_CORAL_BLOCK)));
	public static final RegistryObject<Block> brain_coral_block_wall = register("brain_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BRAIN_CORAL_BLOCK)));
	public static final RegistryObject<Block> bubble_coral_block_wall = register("bubble_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BUBBLE_CORAL_BLOCK)));
	public static final RegistryObject<Block> fire_coral_block_wall = register("fire_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.FIRE_CORAL_BLOCK)));
	public static final RegistryObject<Block> horn_coral_block_wall = register("horn_coral_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.HORN_CORAL_BLOCK)));
	public static final RegistryObject<Block> blue_ice_wall = register("blue_ice_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BLUE_ICE)));
	public static final RegistryObject<Block> honey_block_wall = register("honey_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.HONEY_BLOCK)));
	public static final RegistryObject<Block> honeycomb_block_wall = register("honeycomb_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.HONEYCOMB_BLOCK)));
	public static final RegistryObject<Block> warped_stem_wall = register("warped_stem_wall", new LogWall(AbstractBlock.Properties.copy(Blocks.WARPED_STEM)));
	public static final RegistryObject<Block> stripped_warped_stem_wall = register("stripped_warped_stem_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.STRIPPED_WARPED_STEM)));
	public static final RegistryObject<Block> warped_hyphae_wall = register("warped_hyphae_wall", new LogWall(AbstractBlock.Properties.copy(Blocks.WARPED_HYPHAE)));
	public static final RegistryObject<Block> stripped_warped_hyphae_wall = register("stripped_warped_hyphae_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.STRIPPED_WARPED_HYPHAE)));
	public static final RegistryObject<Block> warped_plank_wall = register("warped_nylium_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WARPED_NYLIUM)));
	public static final RegistryObject<Block> warped_nylium_wall = register("warped_wart_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WARPED_WART_BLOCK)));
	public static final RegistryObject<Block> warped_wart_block_wall = register("crimson_stem_wall", new LogWall(AbstractBlock.Properties.copy(Blocks.CRIMSON_STEM)));
	public static final RegistryObject<Block> crimson_stem_wall = register("stripped_crimson_stem_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.STRIPPED_CRIMSON_STEM)));
	public static final RegistryObject<Block> stripped_crimson_stem_wall = register("crimson_hyphae_wall", new LogWall(AbstractBlock.Properties.copy(Blocks.CRIMSON_HYPHAE)));
	public static final RegistryObject<Block> crimson_hyphae_wall = register("stripped_crimson_hyphae_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.STRIPPED_CRIMSON_HYPHAE)));
	public static final RegistryObject<Block> stripped_crimson_hyphae_wall = register("crimson_nylium_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CRIMSON_NYLIUM)));
	public static final RegistryObject<Block> crimson_plank_wall = register("shroomlight_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.SHROOMLIGHT)));
	public static final RegistryObject<Block> crimson_nylium_wall = register("crimson_plank_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CRIMSON_PLANKS)));
	public static final RegistryObject<Block> shroomlight_wall = register("warped_plank_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.WARPED_PLANKS)));
	public static final RegistryObject<Block> netherite_block_wall = register("netherite_block_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.NETHERITE_BLOCK)));
	public static final RegistryObject<Block> ancient_debris_wall = register("ancient_debris_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.ANCIENT_DEBRIS)));
	public static final RegistryObject<Block> crying_obsidian_wall = register("crying_obsidian_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CRYING_OBSIDIAN)));
	public static final RegistryObject<Block> basalt_wall = register("basalt_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.BASALT)));
	public static final RegistryObject<Block> polished_basalt_wall = register("polished_basalt_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.POLISHED_BASALT)));
	public static final RegistryObject<Block> cracked_polished_blackstone_brick_wall = register("cracked_polished_blackstone_brick_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS)));
	public static final RegistryObject<Block> chiseled_polished_blackstone_wall = register("chiseled_polished_blackstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_POLISHED_BLACKSTONE)));
	public static final RegistryObject<Block> gilded_blackstone_wall = register("gilded_blackstone_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.GILDED_BLACKSTONE)));
	public static final RegistryObject<Block> chiseled_nether_brick_wall = register("chiseled_nether_brick_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CHISELED_NETHER_BRICKS)));
	public static final RegistryObject<Block> cracked_nether_brick_wall = register("cracked_nether_brick_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.CRACKED_NETHER_BRICKS)));
	public static final RegistryObject<Block> quartz_brick_wall = register("quartz_brick_wall", new WallBlock(AbstractBlock.Properties.copy(Blocks.QUARTZ_BRICKS)));

	private static RegistryObject<Block> register(String name, Block block) {
		ITEMS.register(name, () -> new BlockItem(block, new Item.Properties().tab(VanillaExtension.VanillaExtensionItemGroup.instance)));
		return BLOCKS.register(name, () -> block);
	}
}
